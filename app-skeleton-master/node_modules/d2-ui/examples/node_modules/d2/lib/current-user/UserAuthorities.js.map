{"version":3,"sources":["../../src/current-user/UserAuthorities.js"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAM,KAAK,GAAG,MAAM,EAAE,CAAC;;IAEF,eAAe;AACrB,aADM,eAAe,GACF;YAAlB,WAAW,yDAAG,EAAE;;8BADX,eAAe;;AAE5B,YAAI,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,WAAW,CAAC,CAAC;KACtC;;iBAHgB,eAAe;;eAK7B,aAAC,SAAS,EAAE;AACX,gBAAI,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AACxB,uBAAO,IAAI,CAAC;aACf;AACD,mBAAO,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SACrC;;;eAEY,gBAAC,WAAW,EAAE;AACvB,mBAAO,IAAI,eAAe,CAAC,WAAW,CAAC,CAAC;SAC3C;;;WAdgB,eAAe;;;qBAAf,eAAe","file":"UserAuthorities.js","sourcesContent":["const auths = Symbol();\n\nexport default class UserAuthorities {\n    constructor(authorities = []) {\n        this[auths] = new Set(authorities);\n    }\n\n    has(authority) {\n        if (this[auths].has('ALL')) {\n            return true;\n        }\n        return this[auths].has(authority);\n    }\n\n    static create(authorities) {\n        return new UserAuthorities(authorities);\n    }\n}\n"]}
// TODO: Most of these functions should be moved out to d2-utilizr

"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

exports.throwError = throwError;
exports.curry = curry;
exports.addLockedProperty = addLockedProperty;
exports.copyOwnProperties = copyOwnProperties;
exports.pick = pick;
exports.updateAPIUrlWithBaseUrlVersionNumber = updateAPIUrlWithBaseUrlVersionNumber;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function throwError(message) {
    throw new Error(message);
}

// TODO: Throw an error when `toCurry` is not a function

function curry(toCurry, parameter) {
    return function curried() {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return toCurry.apply(this, [parameter].concat(args));
    };
}

function addLockedProperty(object, name, value) {
    var propertyDescriptor = {
        enumerable: true,
        configurable: false,
        writable: false,
        value: value
    };
    Object.defineProperty(object, name, propertyDescriptor);
}

function copyOwnProperties(to, from) {
    var key = undefined;

    for (key in from) {
        if (from.hasOwnProperty(key)) {
            to[key] = from[key]; // eslint-disable-line no-param-reassign
        }
    }

    return to;
}

function pick(property) {
    return function (item) {
        if (item) {
            return item[property];
        }
        return undefined;
    };
}

var Deferred = (function () {
    function Deferred() {
        var _this = this;

        _classCallCheck(this, Deferred);

        this.promise = new Promise(function (resolve, reject) {
            _this.resolve = resolve;
            _this.reject = reject;
        });
    }

    _createClass(Deferred, null, [{
        key: "create",
        value: function create() {
            return new Deferred();
        }
    }]);

    return Deferred;
})();

exports.Deferred = Deferred;

function updateAPIUrlWithBaseUrlVersionNumber(apiUrl, baseUrl) {
    if (!baseUrl || !apiUrl) {
        return apiUrl;
    }

    var apiUrlWithVersionRexExp = /api\/(2[3-9])/;
    var apiVersionMatch = baseUrl.match(apiUrlWithVersionRexExp);

    var baseUrlHasVersion = apiVersionMatch && apiVersionMatch[1];
    var apiUrlHasVersion = apiUrl && !apiUrlWithVersionRexExp.test(apiUrl);

    if (baseUrlHasVersion && apiUrlHasVersion) {
        var version = apiVersionMatch[1];

        // Inject the current api version number into the endPoint urls
        return apiUrl.replace(/api/, "api/" + version);
    }

    return apiUrl;
}
//# sourceMappingURL=utils.js.map
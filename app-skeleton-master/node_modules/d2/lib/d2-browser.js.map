{"version":3,"sources":["webpack:///webpack/bootstrap 79d1c34d15e0e3ee6df2","webpack:///./src/d2.js","webpack:///./src/lib/utils.js","webpack:///./src/logger/Logger.js","webpack:///./src/lib/check.js","webpack:///./src/model/models.js","webpack:///./src/model/ModelBase.js","webpack:///./src/model/ModelValidation.js","webpack:///./src/api/Api.js","webpack:///./src/external/jquery.js","webpack:///./src/system/System.js","webpack:///./src/system/SystemSettings.js","webpack:///./src/system/SystemConfiguration.js","webpack:///./src/model/Model.js","webpack:///./src/model/ModelDefinition.js","webpack:///./src/model/ModelDefinitions.js","webpack:///./src/model/ModelCollection.js","webpack:///./src/pager/Pager.js","webpack:///./src/model/ModelCollectionProperty.js","webpack:///./src/lib/SchemaTypes.js","webpack:///./src/model/Filters.js","webpack:///./src/model/Filter.js","webpack:///./src/model/config/index.js","webpack:///./src/model/config/model-defaults/organisationUnitGroupSet.js","webpack:///./src/model/config/model-defaults/dataElement.js","webpack:///./src/model/config/model-defaults/dataSet.js","webpack:///./src/i18n/I18n.js","webpack:///./src/config.js","webpack:///./src/defaultConfig.js","webpack:///./src/current-user/CurrentUser.js","webpack:///./src/current-user/UserAuthorities.js","webpack:///./src/current-user/UserSettings.js"],"names":[],"mappings":"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","file":"d2-browser.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 79d1c34d15e0e3ee6df2\n **/","import { pick, Deferred } from './lib/utils';\nimport Logger from './logger/Logger';\nimport model from './model/models';\nimport Api from './api/Api';\nimport System from './system/System';\nimport I18n from './i18n/I18n';\nimport Config from './config';\nimport CurrentUser from './current-user/CurrentUser';\nimport jQuery from './external/jquery';\n\nlet firstRun = true;\nlet deferredD2Init = Deferred.create();\n\nconst preInitConfig = Config.create();\n\nexport function getManifest(url) {\n    const api = new Api(jQuery);\n    api.setBaseUrl('');\n\n    const manifestUtilities = {\n        getBaseUrl() {\n            return this.activities.dhis.href;\n        },\n    };\n\n    return api.get(`${url}`)\n        .then(manifest => Object.assign({}, manifest, manifestUtilities));\n}\n\n\n/**\n * @function getUserSettings\n *\n * @returns {Promise} A promise to the current user settings\n *\n * @description\n * The object that is the result of the promise will have the following properties\n * ```js\n * {\n *   \"uiLocale\": \"en\" // The users locale, that can be used for translations)\n * }\n * ```\n */\nexport function getUserSettings() {\n    const api = Api.getApi();\n\n    if (preInitConfig.baseUrl && firstRun) {\n        api.setBaseUrl(preInitConfig.baseUrl);\n    }\n\n    return api.get('userSettings');\n}\n\n/**\n * @function init\n *\n * @param {Object} initConfig Configuration object that will be used to configure to define D2 Setting.\n * See the description for more information on the available settings.\n * @returns {Promise} A promise that resolves with the intialized d2 object. Which is an object that exposes `model`, `models` and `Api`\n *\n * @description\n * Init function that used to initialise D2. This will load the schemas from the DHIS2 api and configure your D2 instance.\n *\n * The `config` object that can be passed into D2 can have the following properties:\n *\n * baseUrl: Set this when the url is something different then `/api`. If you are running your dhis instance in a subdirectory of the actual domain\n * for example http://localhost/dhis/ you should set the base url to `/dhis/api`\n *\n * ```js\n * import init from 'd2';\n *\n * init({baseUrl: '/dhis/api'})\n *   .then((d2) => {\n *     console.log(d2.model.dataElement.list());\n *   });\n * ```\n */\nexport function init(initConfig) {\n    const api = Api.getApi();\n    const logger = Logger.getLogger();\n\n    const config = Config.create(preInitConfig, initConfig);\n\n    const d2 = {\n        models: undefined,\n        model,\n        Api,\n        system: System.getSystem(),\n        i18n: I18n.getI18n(),\n    };\n\n    // Process the config in a the config class to keep all config calls together.\n    Config.processConfigForD2(config, d2);\n\n    // Because when importing the getInstance method in dependencies the getInstance could run before\n    // init we have to resolve the current promise on first run and for consecutive ones replace the\n    // old one with a fresh promise.\n    if (firstRun) {\n        firstRun = false;\n    } else {\n        deferredD2Init = Deferred.create();\n    }\n\n    return Promise.all([\n        api.get('schemas'),\n        api.get('attributes', { fields: ':all,optionSet[:all,options[:all]]', paging: false }),\n        api.get('me', { fields: ':all,organisationUnits[id],userGroups[id],userCredentials[:all,!user,userRoles[id]' }),\n        api.get('me/authorization'),\n        getUserSettings(),\n        api.get('system/info'),\n        api.get('apps'),\n        d2.i18n.load(),\n    ])\n        .then(res => {\n            const responses = {\n                schemas: pick('schemas')(res[0]),\n                attributes: pick('attributes')(res[1]),\n                currentUser: res[2],\n                authorities: res[3],\n                userSettings: res[4],\n                systemInfo: res[5],\n                apps: res[6],\n            };\n\n            responses.schemas\n                // TODO: Remove this when the schemas endpoint is versioned or shows the correct urls for the requested version\n                // The schemas endpoint is not versioned which will result into the modelDefinitions always using the\n                // \"default\" endpoint, we therefore modify the endpoint url based on the given baseUrl.\n                .map(schema => {\n                    const apiVersionMatch = config.baseUrl.match(/api\\/(2[3-9])/);\n\n                    // Not all schemas have an apiEndpoint\n                    if (apiVersionMatch && apiVersionMatch[1] && schema.apiEndpoint) {\n                        const version = apiVersionMatch[1];\n\n                        // Inject the current api version number into the endPoint urls\n                        schema.apiEndpoint = schema.apiEndpoint.replace(/api/, `api/${version}`); // eslint-disable-line no-param-reassign\n                    }\n\n                    return schema;\n                })\n                .forEach((schema) => {\n                    // Attributes that do not have values do not by default get returned with the data.\n                    // Therefore we need to grab the attributes that are attached to this particular schema to be able to know about them\n                    const schemaAttributes = responses.attributes\n                        .filter(attributeDescriptor => {\n                            const attributeNameFilter = [schema.name, 'Attribute'].join('');\n                            return attributeDescriptor[attributeNameFilter] === true;\n                        });\n\n                    if (!Object.prototype.hasOwnProperty.call(d2.models, schema.name)) {\n                        d2.models.add(model.ModelDefinition.createFromSchema(schema, schemaAttributes));\n                    }\n                });\n\n            d2.currentUser = CurrentUser.create(\n                responses.currentUser,\n                responses.authorities,\n                d2.models,\n                responses.userSettings\n            );\n            d2.system.setSystemInfo(responses.systemInfo);\n            d2.system.setInstalledApps(responses.apps);\n\n            deferredD2Init.resolve(d2);\n            return deferredD2Init.promise;\n        })\n        .catch((error) => {\n            logger.error('Unable to get schemas from the api', JSON.stringify(error), error);\n\n            deferredD2Init.reject('Unable to get schemas from the DHIS2 API');\n            return deferredD2Init.promise;\n        });\n}\n\n/**\n * @function getInstance\n *\n * @returns {Promise} A promise to an initialized d2 instance.\n *\n * @description\n * This function can be used to retrieve the `singleton` instance of d2. The instance is being created by calling\n * the `init` method.\n *\n * ```js\n * import {init, getInstance} from 'd2';\n *\n * init({baseUrl: '/dhis2/api/'});\n * getInstance()\n *   .then(d2 => {\n *      d2.models.dataElement.list();\n *      // and all your other d2 magic.\n *   });\n * ```\n */\nexport function getInstance() {\n    return deferredD2Init.promise;\n}\n\n// Alias preInitConfig to be able to `import {config} from 'd2';`\n/**\n * @property config\n *\n * @description\n * Can be used to set config options before initialisation of d2.\n *\n * ```js\n * import {config, init} from 'd2';\n *\n * config.baseUrl = '/demo/api';\n * config.i18n.sources.add('i18n/systemsettingstranslations.properties');\n *\n * init()\n *   .then(d2 => {\n *     d2.system.settings.all()\n *       .then(systemSettings => Object.keys())\n *       .then(systemSettingsKey => {\n *         d2.i18n.getTranslation(systemSettingsKey);\n *       });\n *   });\n *\n * ```\n */\nexport const config = preInitConfig;\n\nexport default {\n    init,\n    config,\n    getInstance,\n    getUserSettings,\n    getManifest,\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/d2.js\n **/","// TODO: Most of these functions should be moved out to d2-utilizr\n\nexport function throwError(message) {\n    throw new Error(message);\n}\n\n// TODO: Throw an error when `toCurry` is not a function\nexport function curry(toCurry, parameter) {\n    return function curried(...args) {\n        return toCurry.apply(this, [parameter].concat(args));\n    };\n}\n\nexport function addLockedProperty(object, name, value) {\n    const propertyDescriptor = {\n        enumerable: true,\n        configurable: false,\n        writable: false,\n        value,\n    };\n    Object.defineProperty(object, name, propertyDescriptor);\n}\n\nexport function copyOwnProperties(to, from) {\n    let key;\n\n    for (key in from) {\n        if (from.hasOwnProperty(key)) {\n            to[key] = from[key]; // eslint-disable-line no-param-reassign\n        }\n    }\n\n    return to;\n}\n\nexport function pick(property) {\n    return item => {\n        if (item) {\n            return item[property];\n        }\n        return undefined;\n    };\n}\n\nexport class Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n\n    static create() {\n        return new Deferred();\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/utils.js\n **/","import { checkType, isType } from '../lib/check';\n\nclass Logger {\n    constructor(logging) {\n        checkType(logging, 'object', 'console');\n        this.logger = logging;\n    }\n\n    canLog(type) {\n        return !!(type && console && isType(this.logger[type], 'function'));\n    }\n\n    debug(...rest) {\n        if (this.canLog('debug')) {\n            this.logger.debug.apply(console, rest);\n            return true;\n        }\n        return false;\n    }\n\n    error(...rest) {\n        if (this.canLog('error')) {\n            this.logger.error.apply(console, rest);\n            return true;\n        }\n        return false;\n    }\n\n    log(...rest) {\n        if (this.canLog('log')) {\n            this.logger.log.apply(console, rest);\n            return true;\n        }\n        return false;\n    }\n\n    warn(...rest) {\n        if (this.canLog('warn')) {\n            this.logger.warn.apply(console, rest);\n            return true;\n        }\n        return false;\n    }\n\n    static getLogger() {\n        let logger;\n\n        // TODO: This is not very clean try to figure out a better way to do this.\n        try {\n            // Node version\n            logger = global.console;\n        } catch (e) {\n            // Browser version fallback\n            /* istanbul ignore next */\n            logger = window.console;\n        }\n\n        if (this.logger) {\n            return this.logger;\n        }\n        return (this.logger = new Logger(logger));\n    }\n}\n\nexport default Logger;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/logger/Logger.js\n **/","export function checkDefined(value, name) {\n    if (value !== undefined) {\n        return true;\n    }\n    throw new Error([name || 'Value', 'should be provided'].join(' '));\n}\n\n// TODO: Decide if checkType([], 'object') is a 'false' positive\nexport function checkType(value, type, name) {\n    checkDefined(value, name);\n    checkDefined(type, 'Type');\n\n    if ((typeof type === 'function' && value instanceof type) ||\n        (typeof type === 'string' && typeof value === type)) {\n        return true;\n    }\n    throw new Error(['Expected', name || value, 'to have type', type].join(' '));\n}\n\n// TODO: Log type error?\nexport function isType(value, type) {\n    function noop() {}\n\n    try {\n        checkType(value, type);\n        return true;\n    } catch (e) {\n        noop();\n    }\n\n    return false;\n}\n\nexport function isString(value) {\n    return isType(value, 'string');\n}\n\nexport function isArray(value) {\n    return Array.isArray(value);\n}\n\nexport function isObject(value) {\n    return isType(value, Object);\n}\n\nexport function isDefined(value) {\n    return value !== undefined;\n}\n\nexport function isInteger(nVal) {\n    return typeof nVal === 'number' &&\n        isFinite(nVal) &&\n        nVal > -9007199254740992 &&\n        nVal < 9007199254740992 &&\n        Math.floor(nVal) === nVal;\n}\n\n// Polyfill for the isInteger function that will be added in ES6\n// http://wiki.ecmascript.org/doku.php?id=harmony:number.isinteger\n/* istanbul ignore if  */\nif (!Number.isInteger) {\n    Number.isInteger = isInteger;\n}\n\nexport function isNumeric(nVal) {\n    return typeof nVal === 'number' &&\n        isFinite(nVal) &&\n        (nVal - parseFloat(nVal) + 1) >= 0;\n}\n\nexport function contains(item, list) {\n    const listToCheck = (isArray(list) && list) || [];\n\n    return listToCheck.indexOf(item) >= 0;\n}\n\nexport function isValidUid(value) {\n    return value && value.length === 11;\n}\n\nexport default {\n    checkType,\n    checkDefined,\n    isArray,\n    isDefined,\n    isInteger,\n    isNumeric,\n    isString,\n    isType,\n    contains,\n    isValidUid,\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/check.js\n **/","import ModelBase from './ModelBase';\nimport Model from './Model';\nimport ModelDefinition from './ModelDefinition';\nimport ModelDefinitions from './ModelDefinitions';\nimport ModelValidation from './ModelValidation';\n\nexport default {\n    ModelBase,\n    Model,\n    ModelDefinition,\n    ModelDefinitions,\n    ModelValidation,\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/model/models.js\n **/","import ModelValidation from './ModelValidation';\nimport { isValidUid } from '../lib/check';\n\nconst modelValidator = ModelValidation.getModelValidation();\n\nexport const DIRTY_PROPERTY_LIST = Symbol('List to keep track of dirty properties');\n\nfunction hasModelValidationForProperty(model, property) {\n    return Boolean(model.modelDefinition &&\n        model.modelDefinition.modelValidations &&\n        model.modelDefinition.modelValidations[property] &&\n        Object.prototype.hasOwnProperty.call(model.modelDefinition.modelValidations, property));\n}\n\nfunction updateModelFromResponseStatus(result) {\n    if (\n        result &&\n        result.response.importCount.imported === 1 &&\n        isValidUid(result.response.lastImported)\n    ) {\n        this.dataValues.id = result.response.lastImported;\n        this.dataValues.href = [this.modelDefinition.apiEndpoint, this.dataValues.id].join('/');\n    }\n    this.dirty = false;\n    this.getDirtyChildren()\n        .forEach(value => {\n            value.dirty = false; // eslint-disable-line no-param-reassign\n        });\n\n    this[DIRTY_PROPERTY_LIST].clear();\n    return result;\n}\n\n/**\n * @class ModelBase\n */\nclass ModelBase {\n    /**\n     * @method create\n     *\n     * @returns {Promise} Returns a promise that resolves when the model has been saved or rejected with the result from\n     * the `validate()` call.\n     *\n     * @definition\n     * Will save model as a new object to the server using a POST request. This method would generally be used if\n     * you're creating models with pre-specified IDs. Note that this does not check if the model is marked as dirty.\n     */\n    create() {\n        return this.validate()\n            .then(validationState => {\n                if (!validationState.status) {\n                    return Promise.reject(validationState);\n                }\n\n                return this.modelDefinition\n                    .saveNew(this)\n                    .then(updateModelFromResponseStatus.bind(this));\n            });\n    }\n\n    /**\n     * @method save\n     *\n     * @returns {Promise} Returns a promise that resolves when the model has been saved\n     * or rejects with the result from the `validate()` call.\n     *\n     * @description\n     * Checks if the model is dirty. When the model is dirty it will check if the values of the model are valid by calling\n     * `validate`. If this is correct it will attempt to save the [Model](#/model/Model) to the api.\n     *\n     * ```js\n     * myModel.save()\n     *   .then((message) => console.log(message));\n     * ```\n     */\n    save(includeChildren) {\n        if (!this.isDirty(includeChildren)) {\n            return Promise.reject('No changes to be saved');\n        }\n\n        return this.validate()\n            .then(validationState => {\n                if (!validationState.status) {\n                    return Promise.reject(validationState);\n                }\n\n                return this.modelDefinition\n                    .save(this)\n                    .then(updateModelFromResponseStatus.bind(this));\n            });\n    }\n\n    /**\n     * @method validate\n     *\n     * @returns {Promise} Promise that resolves with an object with a status property that represents if the model\n     * is valid or not the fields array will return the names of the fields that are invalid.\n     *\n     * @description\n     * This will run the validations on the properties which have validations set. Normally these validations are defined\n     * through the DHIS2 schema. It will check min/max for strings/numbers etc. Additionally it will\n     * run model validations against the schema.\n     *\n     * ```js\n     * myModel.validate()\n     *  .then(myModelStatus => {\n     *    if (myModelStatus.status === false) {\n     *      myModelStatus.fields.forEach((fieldName) => console.log(fieldName));\n     *    }\n     * });\n     * ```\n     */\n    validate() {\n        return new Promise((resolve, reject) => {\n            let validationMessages = [];\n\n            function unique(current, property) {\n                if (property && current.indexOf(property) === -1) {\n                    current.push(property);\n                }\n                return current;\n            }\n\n            function asyncRemoteValidation(model) {\n                return modelValidator.validateAgainstSchema(model);\n            }\n\n            // Run async validation against the api\n            asyncRemoteValidation(this)\n                .then(remoteMessages => {\n                    validationMessages = validationMessages.concat(remoteMessages);\n\n                    const validationState = {\n                        status: remoteMessages.length === 0,\n                        fields: validationMessages\n                            .map(validationMessage => validationMessage.property)\n                            .reduce(unique, []),\n                        messages: validationMessages,\n                    };\n                    resolve(validationState);\n                })\n                .catch(message => reject(message));\n        });\n    }\n\n    delete() {\n        return this.modelDefinition.delete(this);\n    }\n\n    isDirty(includeChildren = true) {\n        if (!(this.dirty || includeChildren === true && this.hasDirtyChildren())) {\n            return false;\n        }\n        return true;\n    }\n\n    getDirtyPropertyNames() {\n        return Array.from(this[DIRTY_PROPERTY_LIST].values());\n    }\n\n    getCollectionChildren() {\n        // TODO: Can't be sure that this has a `modelDefinition` property\n        return Object.keys(this)\n            .filter(\n                propertyName => this[propertyName] &&\n                hasModelValidationForProperty(this, propertyName) &&\n                this.modelDefinition.modelValidations[propertyName].owner &&\n                this[propertyName].size >= 0\n            )\n            .map(propertyName => this[propertyName]);\n    }\n\n    getCollectionChildrenPropertyNames() {\n        return Object\n            .keys(this)\n            .filter((propertyName) =>\n                this.modelDefinition &&\n                this.modelDefinition.modelValidations &&\n                this.modelDefinition.modelValidations[propertyName] &&\n                this.modelDefinition.modelValidations[propertyName].type === 'COLLECTION'\n            );\n    }\n\n    getDirtyChildren() {\n        return this.getCollectionChildren()\n            .filter(property => property && (property.dirty === true));\n    }\n\n    hasDirtyChildren() {\n        return this.getDirtyChildren().length > 0;\n    }\n}\n\nexport default new ModelBase();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/model/ModelBase.js\n **/","import { checkType } from '../lib/check';\nimport Logger from '../logger/Logger';\nimport Api from '../api/Api';\n\n\n/**\n * @class ModelValidation\n */\nclass ModelValidation {\n    constructor(providedLogger) {\n        checkType(providedLogger, 'object', 'logger (Logger)');\n        this.logger = providedLogger;\n    }\n\n    /**\n     * @deprecated\n     * @method validate\n     *\n     * @returns {{status: boolean, messages: Array}} Returns {status: true, messages: []}\n     */\n    validate() {\n        this.logger.warn('Client side model validation is deprecated');\n        throw new Error('Client side model validation is deprecated');\n    }\n\n    /**\n     * @method validateAgainstSchema\n     *\n     * @param {Model} model The model that should be validated.\n     * @returns {Array} Returns an array with validation messages if there are any.\n     *\n     * @description\n     * Sends a POST request against the `api/schemas` endpoint to check if the model is valid.\n     *\n     * @note {warn} Currently only checks\n     */\n    validateAgainstSchema(model) {\n        if (!(model && model.modelDefinition && model.modelDefinition.name)) {\n            return Promise.reject('model.modelDefinition.name can not be found');\n        }\n\n        function extractValidationViolations(webmessage) {\n            // Support both the 2.23+ version using `errorReports` and the 2.22 and lower using `validationViolations`\n            // for errorMessages from the schemas endpoint.\n            // TODO: Remove support for the older `validationViolations` when supporting 2.22 is no longer required\n            if (webmessage.response && (webmessage.response.validationViolations || webmessage.response.errorReports)) {\n                return (webmessage.response.validationViolations || webmessage.response.errorReports);\n            }\n            throw new Error('Response was not a WebMessage with the expected format');\n        }\n\n        const url = `schemas/${model.modelDefinition.name}`;\n\n        // TODO: The function getOwnedPropertyJSON should probably not be exposed, perhaps we could have a getJSONForModel(ownedPropertiesOnly=true) method.\n        return Api.getApi().post(url, model.modelDefinition.getOwnedPropertyJSON(model))\n            .then((webMessage) => {\n                if (webMessage.status === 'OK') {\n                    return [];\n                }\n                return Promise.reject(webMessage);\n            })\n            .catch(extractValidationViolations);\n    }\n\n    /**\n     * @method getModelValidation\n     * @static\n     *\n     * @returns {ModelValidation} New or memoized instance of `ModelInstance`\n     *\n     * @description\n     * Returns the `ModelValidation` singleton. Creates a new one if it does not yet exist.\n     * Grabs a logger instance by calling `Logger.getLogger`\n     */\n    static getModelValidation() {\n        if (this.modelValidation) {\n            return this.modelValidation;\n        }\n        return (this.modelValidation = new ModelValidation(Logger.getLogger(console)));\n    }\n}\n\nexport default ModelValidation;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/model/ModelValidation.js\n **/","import { checkType } from '../lib/check';\nimport jQuery from '../external/jquery';\nimport System from '../system/System';\n\nfunction getMergeStrategyParam(mergeType = 'REPLACE') {\n    const system = System.getSystem();\n\n    if (system.version && (Number(system.version.minor) <= 22)) {\n        return `mergeStrategy=${mergeType}`;\n    }\n\n    return `mergeMode=${mergeType}`;\n}\n\nfunction processSuccess(resolve) {\n    return (data/* , textStatus, jqXHR */) => {\n        resolve(data);\n    };\n}\n\nfunction processFailure(reject) {\n    return (jqXHR/* , textStatus, errorThrown */) => {\n        if (jqXHR.responseJSON) {\n            return reject(jqXHR.responseJSON);\n        }\n\n        delete jqXHR.then; // eslint-disable-line no-param-reassign\n        return reject(jqXHR);\n    };\n}\n\nfunction getUrl(baseUrl, url) {\n    // If we are dealing with an absolute url use that instead\n    if (new RegExp('^(:?https?:)?//').test(url)) {\n        return url;\n    }\n\n    const urlParts = [];\n\n    if (baseUrl) {\n        urlParts.push(baseUrl);\n    }\n    urlParts.push(url);\n\n    return urlParts.join('/')\n        .replace(new RegExp('(.(?:[^:]))\\/\\/+', 'g'), '$1/')\n        .replace(new RegExp('\\/$'), '');\n}\n\nclass Api {\n    constructor(jquery) {\n        if (!jquery) {\n            throw new Error('D2 requires jQuery');\n        }\n\n        this.jquery = jquery;\n        this.baseUrl = '/api';\n        this.defaultRequestSettings = {\n            headers: {\n                // FIXME: Remove the 'Cache-Control: no-store' header when we figure out how to solve this xhr/jquery bug\n                // does not process consecutive requests for the same url properly due to the 304 response.\n                // It makes no sense to set a 'Cache-Control: no-store' on a request...\n                'Cache-Control': 'no-store',\n            },\n            data: {},\n            contentType: 'application/json',\n            type: undefined,\n            url: undefined,\n        };\n    }\n\n    get(url, data, options) {\n        return this.request('GET', getUrl(this.baseUrl, url), data, options);\n    }\n\n    post(url, data, options) {\n        // Pass data through JSON.stringify, unless options.contentType is 'text/plain' or false (meaning don't process)\n        const\n            payload = (\n                options &&\n                options.contentType !== undefined &&\n                (options.contentType === 'text/plain' || options.contentType === false)\n            ) ? data : JSON.stringify(data);\n        return this.request('POST', getUrl(this.baseUrl, url), payload, options);\n    }\n\n    delete(url, options) {\n        return this.request('DELETE', getUrl(this.baseUrl, url), undefined, options);\n    }\n\n    update(url, data, useMergeStrategy = false) {\n        // Since we are currently using PUT to save the full state back, we have to use mergeMode=REPLACE\n        // to clear out existing values\n        const urlForUpdate = useMergeStrategy === true ? `${url}?${getMergeStrategyParam()}` : url;\n\n        return this.request('PUT', getUrl(this.baseUrl, urlForUpdate), JSON.stringify(data));\n    }\n\n    request(type, url, data, options = {}) {\n        checkType(type, 'string', 'Request type');\n        checkType(url, 'string', 'Url');\n        let requestUrl = url;\n\n        if (data && data.filter) {\n            const urlQueryParams = data.filter\n                // `${str}${separator}${filter}`\n                .reduce((str, filter) => {\n                    const separator = str.length ? '&' : '';\n                    const filterQuery = `filter=${filter}`;\n\n                    return `${str}${separator}${filterQuery}`;\n                }, '');\n\n            delete data.filter; // eslint-disable-line no-param-reassign\n            requestUrl += `?${urlQueryParams}`;\n        }\n\n        const api = this;\n\n        function getOptions(mergeOptions, requestData) {\n            let payload = requestData;\n            if (payload === undefined) {\n                payload = {};\n            } else if (payload === true || payload === false) {\n                payload = payload.toString();\n            }\n\n            const resultOptions = Object.assign({}, api.defaultRequestSettings, mergeOptions);\n\n            resultOptions.type = type;\n            resultOptions.url = requestUrl;\n            resultOptions.data = payload;\n            resultOptions.dataType = options.dataType !== undefined ? options.dataType : 'json';\n            resultOptions.contentType = options.contentType !== undefined ? options.contentType : 'application/json';\n\n            // Only set content type when there is data to send\n            // GET requests and requests without data do not need a Content-Type header\n            // 0 and false are valid requestData values and therefore should have a content type\n            if (type === 'GET' || (!requestData && requestData !== 0 && requestData !== false)) {\n                resultOptions.contentType = undefined;\n            }\n\n            return resultOptions;\n        }\n\n        return new Promise((resolve, reject) => {\n            api.jquery\n                .ajax(getOptions(options, data))\n                .then(processSuccess(resolve), processFailure(reject));\n        });\n    }\n\n    setBaseUrl(baseUrl) {\n        checkType(baseUrl, 'string', 'Base url');\n\n        this.baseUrl = baseUrl;\n\n        return this;\n    }\n}\n\nfunction getApi() {\n    if (getApi.api) {\n        return getApi.api;\n    }\n    return (getApi.api = new Api(jQuery));\n}\n\nApi.getApi = getApi;\n\nexport default Api;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/Api.js\n **/","import log from '../logger/Logger';\n\nlet jquery;\n\ntry {\n    jquery = window.jQuery;\n} catch (e) {\n    log.getLogger().error('JQuery not found');\n    jquery = {};\n}\n\nexport default jquery;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/external/jquery.js\n **/","/**\n * @module System\n *\n * @requires d2/system/SystemSettings\n */\nimport Api from '../api/Api';\nimport SystemSettings from './SystemSettings';\nimport SystemConfiguration from './SystemConfiguration';\n\n/**\n * @class System\n *\n * @description\n * Represents the system that can be interacted with. There is a single instance of this pre-defined onto the d2\n * object after initialisation. This can be interacted with using its property objects to among other be used\n * to get and save systemSettings.\n */\nclass System {\n    constructor(settings, configuration) {\n        /**\n         * @property {SystemSettings} settings Contains a reference to a `SystemSettings` instance that can be used\n         * to retrieve and save system settings.\n         *\n         * @description\n         * ```js\n         * d2.system.settings.get('keyLastSuccessfulResourceTablesUpdate')\n         *  .then(systemSettingsValue => {\n         *    console.log('Analytics was last updated on: ' + systemSettingsValue);\n         *  });\n         * ```\n         */\n        this.settings = settings;\n\n        /**\n         * @property {SystemConfiguration} configuration\n         *\n         * @description A representation of the system configuration, that can be used to retreive and change system\n         * configuration options.\n         */\n        this.configuration = configuration;\n\n        /**\n         * @property {Object} systemInfo\n         *\n         * @description An object containing system information about the DHIS2 instance\n         */\n        this.systemInfo = undefined;\n\n        /**\n         * @property {Object} version\n         *\n         * @description An object containing version information about the DHIS2 instance\n         */\n        this.version = undefined;\n\n        /**\n         * @property {Array} installedApps\n         *\n         * @description An array of all the webapps that are installed on the current DHIS2 instance\n         */\n        this.installedApps = undefined;\n    }\n\n    /**\n     * Sets the systemInfo and version properties\n     *\n     * @param systemInfo\n     */\n    setSystemInfo(systemInfo) {\n        this.version = System.parseVersionString(systemInfo.version);\n        this.systemInfo = systemInfo;\n    }\n\n    /**\n     * Sets the list of currently installed webapps\n     *\n     * @param apps\n     */\n    setInstalledApps(apps) {\n        this.installedApps = apps;\n    }\n\n    /**\n     * Refreshes the list of currently installed webapps\n     *\n     * @returns {Promise} A promise that resolves to the list of installed apps\n     */\n    loadInstalledApps() {\n        const api = Api.getApi();\n\n        return api.get('apps')\n            .then(apps => {\n                this.setInstalledApps(apps);\n\n                return apps;\n            });\n    }\n\n    /**\n     * Upload and install a zip file containing a new webapp\n     *\n     * @param zipFile Zip file data from a file input form field\n     * @param onProgress An optional callback that will be called whenever file upload progress info is available\n     * @returns {Promise}\n     */\n    uploadApp(zipFile, onProgress) {\n        const api = Api.getApi();\n        const data = new FormData();\n        let xhr = undefined;\n        data.append('file', zipFile);\n\n        if (onProgress !== undefined) {\n            xhr = new XMLHttpRequest();\n            xhr.upload.onprogress = (progress) => {\n                if (progress.lengthComputable) {\n                    onProgress(progress.loaded / progress.total);\n                }\n            };\n        }\n\n        return api.post('apps', data, {\n            contentType: false,\n            processData: false,\n            xhr: xhr !== undefined ? () => xhr : undefined,\n        });\n    }\n\n    /**\n     * Load the list of apps available in the DHIS 2 app store\n     *\n     * @param compatibleOnly If true, apps that are incompatible with the current system will be filtered out\n     * @returns {Promise}\n     */\n    loadAppStore(compatibleOnly = true) {\n        return new Promise((resolve, reject) => {\n            const api = Api.getApi();\n            api.get('appStore').then(appStoreData => {\n                const appStore = Object.assign({}, appStoreData);\n\n                appStore.apps = appStore.apps\n                    .map(appData => {\n                        const app = Object.assign({}, appData);\n\n                        if (compatibleOnly) {\n                            app.versions = app.versions\n                                .filter(versionData => System.isVersionCompatible(this.version, versionData));\n                        }\n\n                        return app;\n                    })\n                    .filter(appData => appData.versions.length > 0);\n\n                resolve(appStore);\n            }).catch(err => {\n                reject(err);\n            });\n        });\n    }\n\n    /**\n     * Install the specified app version from the DHIS 2 app store\n     *\n     * @param uid The uid of the app version to install\n     * @returns {Promise}\n     */\n    installAppVersion(uid) {\n        const api = Api.getApi();\n        return new Promise((resolve, reject) => {\n            api.post(['appStore', uid].join('/'), '', { dataType: 'text' }).then(() => {\n                resolve();\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    }\n\n    /**\n     * Remove the specified app from the system\n     *\n     * @param appKey The key of the app to remove\n     * @returns {Promise}\n     */\n    uninstallApp(appKey) {\n        const api = Api.getApi();\n\n        return api.delete(['apps', appKey].join('/'))\n            // TODO: Stop jQuery from rejecting successful promises\n            .catch(() => undefined);\n    }\n\n    /**\n     * Refresh the list of apps that are installed on the server\n     *\n     * @returns {Promise} A promise that resolves to the updated list of installed apps\n     */\n    reloadApps() {\n        const api = Api.getApi();\n        return api.update('apps').then(() => this.loadInstalledApps());\n    }\n\n    // TODO: Document\n    // TODO: Validate string\n    // TODO: Handle valid version objects too\n    static parseVersionString(version) {\n        return {\n            major: Number.parseInt(version, 10),\n            minor: Number.parseInt(version.substring(version.indexOf('.') + 1), 10),\n            snapshot: version.indexOf('-SNAPSHOT') >= 0,\n        };\n    }\n\n    // TODO: Document\n    // Disable eslint complexity warning\n    /* eslint-disable */\n    static compareVersions(a, b) {\n        const from = (typeof a === 'string' || a instanceof String) ? System.parseVersionString(a) : a;\n        const to = (typeof b === 'string' || b instanceof String) ? System.parseVersionString(b) : b;\n\n        if (from.major !== to.major) {\n            return from.major - to.major;\n        } else if (from.minor !== to.minor) {\n            return from.minor - to.minor;\n        }\n\n        return (from.snapshot ? 0 : 1) - (to.snapshot ? 0 : 1);\n    }\n    /* eslint-enable */\n\n    static isVersionCompatible(systemVersion, appVersion) {\n        const isNewEnough = (\n            appVersion.min_platform_version ?\n            System.compareVersions(systemVersion, appVersion.min_platform_version) >= 0 :\n            true\n        );\n        const isNotTooOld = (\n            appVersion.max_platform_version ?\n            System.compareVersions(systemVersion, appVersion.max_platform_version) <= 0 :\n            true\n        );\n\n        return isNewEnough && isNotTooOld;\n    }\n\n    /**\n     * @method getSystem\n     * @static\n     *\n     * @returns {System} Object with the system interaction properties\n     *\n     * @description\n     * Get a new instance of the system object. This will function as a singleton, when a System object has been created\n     * when requesting getSystem again the original version will be returned.\n     */\n    static getSystem() {\n        if (!System.getSystem.system) {\n            System.getSystem.system = new System(new SystemSettings(), new SystemConfiguration());\n        }\n\n        return System.getSystem.system;\n    }\n}\n\nexport default System;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/system/System.js\n **/","/**\n * @module System\n *\n * @requires lib/check\n * @requires api/Api\n */\n\nimport { isString } from '../lib/check';\nimport Api from '../api/Api';\n\n\n/**\n * @class SystemSettings\n *\n * @description\n * Handles communication with the systemSettings endpoint. Can be used to get or save systemSettings.\n */\n// TODO: Return the values from the local cache if we have not updated it? We could\nclass SystemSettings {\n    constructor(api = Api.getApi()) {\n        this.api = api;\n    }\n\n    /**\n     * @method all\n     *\n     * @returns {Promise} Promise that resolves with the systemsettings object from the api.\n     *\n     * @description\n     * Loads all the system settings in the system and returns them as an object from the promise.\n     * ```js\n     * d2.system.settings.all()\n     *  .then(systemSettings => {\n     *    console.log('Analytics was last updated on: ' + systemSettings.keyLastSuccessfulResourceTablesUpdate);\n     *  });\n     * ```\n     */\n    all() {\n        return this.api.get('systemSettings');\n    }\n\n    /**\n     * @method get\n     *\n     * @param {String} systemSettingsKey The identifier of the system setting that should be retrieved.\n     * @returns {Promise} A promise that resolves with the value or will fail if the value is not available.\n     *\n     * @description\n     * ```js\n     * d2.system.settings.get('keyLastSuccessfulResourceTablesUpdate')\n     *  .then(systemSettingsValue => {\n     *    console.log('Analytics was last updated on: ' + systemSettingsValue);\n     *  });\n     * ```\n     */\n    get(systemSettingsKey) {\n        function processValue(value) {\n            // Attempt to parse the response as JSON. If this fails we return the value as is.\n            try {\n                return JSON.parse(value);\n            } catch (e) {\n                return value;\n            }\n        }\n\n        return new Promise((resolve, reject) => {\n            if (!isString(systemSettingsKey)) {\n                throw new TypeError('A \"key\" parameter should be specified when calling get() on systemSettings');\n            }\n\n            this.api.get(['systemSettings', systemSettingsKey].join('/'), undefined, { dataType: 'text' })\n                .then(response => {\n                    const systemSettingValue = processValue(response);\n                    if (systemSettingValue) {\n                        resolve(processValue(response));\n                    }\n                    reject(new Error('The requested systemSetting has no value or does not exist.'));\n                });\n        });\n    }\n\n    set(systemSettingsKey, value) {\n        const settingUrl = ['systemSettings', systemSettingsKey].join('/');\n        if (value === null || (`${value}`).length === 0) {\n            return this.api.delete(settingUrl, { dataType: 'text' });\n        }\n        return this.api.post(settingUrl, value, { dataType: 'text', contentType: 'text/plain' });\n    }\n}\n\nexport default SystemSettings;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/system/SystemSettings.js\n **/","/**\n * @module System\n *\n * @requires lib/check\n * @requires api/Api\n */\nimport Api from '../api/Api';\n\n/**\n * Handles communication with the configuration endpoint. Can be used to get or set configuration options.\n */\nclass SystemConfiguration {\n    constructor(api = Api.getApi()) {\n        this.api = api;\n\n        this._configuration = undefined;\n        this._configPromise = null;\n    }\n\n    /**\n     * Fetches all system configuration settings from the API and caches them so that future\n     * calls to this function won't call the API again.\n     *\n     * @param {boolean=false} ignoreCache If set to true, calls the API regardless of cache status\n     * @returns {Promise} Promise that resolves with all the individual configuration options from the api.\n     */\n    all(ignoreCache) {\n        if (this._configPromise === null || ignoreCache === true) {\n            this._configPromise = this.api.get('configuration')\n                .then(configuration => {\n                    this._configuration = configuration;\n                    return this._configuration;\n                });\n        }\n\n        return this._configPromise;\n    }\n\n    /**\n     * Returns the value of the specified configuration option.\n     *\n     * This is a convenience method that works exactly the same as calling `configuration.all()[name]`.\n     *\n     * @param key {String}\n     * @param {boolean=false} ignoreCache If set to true, calls the API regardless of cache status\n     * @returns {Promise}\n     */\n    get(key, ignoreCache) {\n        return this.all(ignoreCache).then(config => {\n            if (config.hasOwnProperty(key)) {\n                return Promise.resolve(config[key]);\n            }\n\n            return Promise.reject(`Unknown config option: ${key}`);\n        });\n    }\n\n\n    /**\n     * Send a query to the API to change the value of a configuration key to the specified value.\n     *\n     * @param key {String}\n     * @param value {String|null}\n     * @returns {Promise}\n     */\n    set(key, value) {\n        const that = this;\n        let req;\n\n        if (key === 'systemId') {\n            return Promise.reject('The system ID can\\'t be changed');\n        } else if (\n            (key === 'feedbackRecipients' || key === 'selfRegistrationOrgUnit' || key === 'selfRegistrationRole') &&\n            (value === 'null' || value === null)\n        ) {\n            // Only valid UIDs are accepted when POST'ing, so we have to use DELETE in stead of POST'ing a null value.\n            req = this.api.delete(['configuration', key].join('/'), { dataType: 'text' });\n        } else if (key === 'corsWhitelist') {\n            // The corsWhitelist endpoint expects an array of URL's, while here value is expected to be a string.\n            req = this.api.post(['configuration', key].join('/'), value.trim().split('\\n'), { dataType: 'text' });\n        } else {\n            req = this.api.post(['configuration', key].join('/'), value, {\n                dataType: 'text',\n                contentType: 'text/plain',\n            });\n        }\n\n        return req\n            .then(() => {\n                // Ideally we'd update the cache here, but doing so requires another trip to the server\n                // For now, just bust the cache to ensure it's not incorrect\n                that._configuration = undefined;\n                return Promise.resolve();\n            })\n            .catch(() => Promise.reject(`No configuration found for ${key}`));\n    }\n}\n\nexport default SystemConfiguration;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/system/SystemConfiguration.js\n **/","/**\n * @module Model\n *\n * @requires lib/check\n * @requires model/ModelBase\n */\n\nimport { checkType } from '../lib/check';\nimport ModelBase from './ModelBase';\nimport { DIRTY_PROPERTY_LIST } from './ModelBase';\n\n// TODO: Perhaps we can generate model classes dynamically based on the schemas and inherit from this.\n/**\n * @class Model\n * @extends ModelBase\n *\n * @description\n * A Model represents an object from the DHIS2 Api. A model is created based of a ModelDefinition. The ModelDefinition\n * has the properties that the model should have.\n */\nclass Model {\n\n    /**\n     * @constructor\n     *\n     * @param {ModelDefinition} modelDefinition The model definition that corresponds with the model.\n     * This is essential defining what type the model is representing.\n     *\n     * @description\n     * Will create a new model instanced based on the model definition. When creating a new instance the model\n     * definition needs to have both the modelValidations and modelProperties.\n     *\n     * The model properties will depend on the ModelDefinition. A model definition is based on a DHIS2 Schema.\n     */\n    constructor(modelDefinition) {\n        checkType(modelDefinition, 'object', 'modelDefinition');\n        checkType(modelDefinition.modelProperties, 'object', 'modelProperties');\n\n        /**\n         * @property {ModelDefinition} modelDefinition Stores reference to the modelDefinition that was used when\n         * creating the model. This property is not enumerable or writable and will therefore not show up when looping\n         * over the object properties.\n         */\n        Object.defineProperty(this, 'modelDefinition', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: modelDefinition,\n        });\n\n        /**\n         * @property {Boolean} dirty Represents the state of the model. When the model is concidered `dirty`\n         * there are pending changes.\n         * This property is not enumerable or writable and will therefore not show up when looping\n         * over the object properties.\n         */\n        Object.defineProperty(this, 'dirty', {\n            enumerable: false,\n            configurable: false,\n            writable: true,\n            value: false,\n        });\n\n        /**\n         * @property {Object} dataValues Values object used to store the actual model values. Normally access to the\n         * Model data will be done through accessor properties that are generated from the modelDefinition.\n         *\n         * @note {warning} This should not be accessed directly.\n         */\n        Object.defineProperty(this, 'dataValues', {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value: {},\n        });\n\n        const hasKeys = (object) => object && !!Object.keys(object).length;\n        const attributes = {};\n        const attributeProperties = modelDefinition.attributeProperties;\n        if (hasKeys(attributeProperties)) {\n            Object.defineProperty(this, 'attributes', {\n                enumerable: false,\n                value: attributes,\n            });\n\n            Object\n                .keys(attributeProperties)\n                .forEach(attributeName => {\n                    Object.defineProperty(attributes, attributeName, {\n                        enumerable: true,\n                        get: () => {\n                            if (!Array.isArray(this.attributeValues)) {\n                                return undefined;\n                            }\n\n                            return this.attributeValues\n                                .filter(value => value.attribute.name === attributeName)\n                                .reduce((current, value) => value.value, undefined);\n                        },\n                        set: (value) => {\n                            if (!this.attributeValues) { this.attributeValues = []; }\n\n                            const attributeValue = this.attributeValues\n                                .filter(av => av.attribute.name === attributeName)\n                                .reduce((current, av) => av, undefined);\n\n                            if (attributeValue) {\n                                // Don't do anything if the value stayed the same\n                                if (attributeValue.value === value) {\n                                    return;\n                                }\n\n                                attributeValue.value = value;\n                            } else {\n                                // Add the new attribute value to the attributeValues collection\n                                this.attributeValues.push({\n                                    value,\n                                    attribute: {\n                                        id: attributeProperties[attributeName].id,\n                                        name: attributeProperties[attributeName].name,\n                                    },\n                                });\n                            }\n\n                            // Set the model to be dirty\n                            this.dirty = true;\n                        },\n                    });\n                });\n        }\n\n        Object.defineProperties(this, modelDefinition.modelProperties);\n\n        this[DIRTY_PROPERTY_LIST] = new Set([]);\n    }\n\n    /**\n     * @method create\n     * @static\n     *\n     * @param {ModelDefinition} modelDefinition ModelDefinition from which the model should be created\n     * @returns {Model} Returns an instance of the model.\n     *\n     * @description The static method is a factory method to create Model objects. It calls `new Model()` with the passed `ModelDefinition`.\n     *\n     * ```js\n     * let myModel = Model.create(modelDefinition);\n     * ```\n     */\n    static create(modelDefinition) {\n        return new Model(modelDefinition);\n    }\n}\n\nModel.prototype = ModelBase;\n\nexport default Model;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/model/Model.js\n **/","import { checkType, isObject, checkDefined, isDefined } from '../lib/check';\nimport { addLockedProperty, curry, copyOwnProperties } from '../lib/utils';\nimport ModelDefinitions from './ModelDefinitions';\nimport Model from './Model';\nimport ModelCollection from './ModelCollection';\nimport ModelCollectionProperty from './ModelCollectionProperty';\nimport schemaTypes from '../lib/SchemaTypes';\nimport Filters from './Filters';\nimport { DIRTY_PROPERTY_LIST } from './ModelBase';\nimport { getDefaultValuesForModelType } from './config';\n\nfunction createModelPropertyDescriptor(propertiesObject, schemaProperty) {\n    const propertyName = schemaProperty.collection ? schemaProperty.collectionName : schemaProperty.name;\n    const propertyDetails = {\n        // Actual property descriptor properties\n        configurable: false,\n        enumerable: true,\n        get() {\n            return this.dataValues[propertyName];\n        },\n    };\n\n    // Only add a setter for writable properties\n    if (schemaProperty.writable) {\n        propertyDetails.set = function dynamicPropertySetter(value) {\n            // TODO: Objects and Arrays are considered unequal when their data is the same and therefore trigger a dirty\n            if ((!isObject(value) && (value !== this.dataValues[propertyName])) || isObject(value)) {\n                this.dirty = true;\n                this[DIRTY_PROPERTY_LIST].add(propertyName);\n                this.dataValues[propertyName] = value;\n            }\n        };\n    }\n\n    if (propertyName) {\n        propertiesObject[propertyName] = propertyDetails; // eslint-disable-line no-param-reassign\n    }\n}\n\nfunction createPropertiesObject(schemaProperties) {\n    const propertiesObject = {};\n    const createModelPropertyDescriptorOn = curry(createModelPropertyDescriptor, propertiesObject);\n\n    (schemaProperties || []).forEach(createModelPropertyDescriptorOn);\n\n    return propertiesObject;\n}\n\nfunction createValidationSetting(validationObject, schemaProperty) {\n    const propertyName = schemaProperty.collection ? schemaProperty.collectionName : schemaProperty.name;\n    const validationDetails = {\n        persisted: schemaProperty.persisted,\n        type: schemaTypes.typeLookup(schemaProperty.propertyType),\n        required: schemaProperty.required,\n        min: schemaProperty.min,\n        max: schemaProperty.max,\n        owner: schemaProperty.owner,\n        unique: schemaProperty.unique,\n        writable: schemaProperty.writable,\n        constants: schemaProperty.constants,\n        ordered: Boolean(schemaProperty.ordered),\n    };\n\n    function getReferenceTypeFrom(property) {\n        if (property.href) {\n            return property.href.split('/').pop();\n        }\n\n        return undefined;\n    }\n\n    // Add a referenceType to be able to get a hold of the reference objects model.\n    if (\n        validationDetails.type === 'REFERENCE' ||\n        (validationDetails.type === 'COLLECTION' &&\n        schemaProperty.itemPropertyType === 'REFERENCE')\n    ) {\n        validationDetails.referenceType = getReferenceTypeFrom(schemaProperty);\n    }\n\n    if (propertyName) {\n        validationObject[propertyName] = validationDetails; // eslint-disable-line no-param-reassign\n    }\n}\n\nfunction createValidations(schemaProperties) {\n    const validationsObject = {};\n    const createModelPropertyOn = curry(createValidationSetting, validationsObject);\n\n    (schemaProperties || []).forEach(createModelPropertyOn);\n\n    return validationsObject;\n}\n\n\nfunction shouldBeModelCollectionProperty(model, models) {\n    return function shouldBeModelCollectionPropertyIterator(modelProperty) {\n        return model &&\n            models &&\n            model.modelDefinition &&\n            model.modelDefinition.modelValidations &&\n            model.modelDefinition.modelValidations[modelProperty] &&\n            model.modelDefinition.modelValidations[modelProperty].type === 'COLLECTION' &&\n            models.hasOwnProperty(model.modelDefinition.modelValidations[modelProperty].referenceType);\n    };\n}\n\nfunction getOwnedPropertyJSON(model) {\n    const objectToSave = {};\n    const ownedProperties = this.getOwnedPropertyNames();\n    const collectionProperties = model\n        .getCollectionChildrenPropertyNames()\n        // Even though attributeValues are considered collections, they are handled separately due to their\n        // difference in structure.\n        .filter(propertyName => propertyName !== 'attributeValues');\n\n    Object.keys(this.modelValidations).forEach((propertyName) => {\n        if (ownedProperties.indexOf(propertyName) >= 0) {\n            if (model.dataValues[propertyName] !== undefined && model.dataValues[propertyName] !== null) {\n                // Handle collections and plain values different\n                if (collectionProperties.indexOf(propertyName) === -1) {\n                    objectToSave[propertyName] = model.dataValues[propertyName];\n                } else {\n                    // compulsoryDataElementOperands is not an array of models.\n                    // TODO: This is not the proper way to do this. We should check if the array contains Models\n                    if (propertyName === 'compulsoryDataElementOperands') {\n                        objectToSave[propertyName] = model.dataValues[propertyName];\n                        return;\n                    }\n\n                    // Transform an object collection to an array of objects with id properties\n                    objectToSave[propertyName] = Array\n                        .from(model.dataValues[propertyName].values())\n                        .filter(value => value.id)\n                        .map((childModel) => {\n                            // Legends can be saved as part of the LegendSet object.\n                            // To make this work properly we will return all of the properties for the items in the collection\n                            // instead of just the `id` fields\n                            if (model.modelDefinition && model.modelDefinition.name === 'legendSet') {\n                                return getOwnedPropertyJSON.call(childModel.modelDefinition, childModel);\n                            }\n\n                            // For any other types we return an object with just an id\n                            return { id: childModel.id };\n                        });\n                }\n            }\n        }\n    });\n\n    return objectToSave;\n}\n\nfunction isAnUpdate(modelToCheck) {\n    return Boolean(modelToCheck.id);\n}\n\n/**\n * @class ModelDefinition\n *\n * @description\n * Definition of a Model. Basically this object contains the meta data related to the Model. Like `name`, `apiEndPoint`, `modelValidation`, etc.\n * It also has methods to create and load Models that are based on this definition. The Data element `ModelDefinition` would be used to create Data Element `Model`s\n *\n * Note: ModelDefinition has a property `api` that is used for the communication with the dhis2 api. The value of this\n * property is an instance of `Api`.\n */\nclass ModelDefinition {\n    constructor(modelName, modelNamePlural, modelOptions, properties, validations, attributes, authorities) {\n        checkType(modelName, 'string');\n        checkType(modelNamePlural, 'string', 'Plural');\n\n        addLockedProperty(this, 'name', modelName);\n        addLockedProperty(this, 'plural', modelNamePlural);\n        addLockedProperty(this, 'isSharable', (modelOptions && modelOptions.shareable) || false);\n        addLockedProperty(this, 'isMetaData', (modelOptions && modelOptions.metadata) || false);\n        addLockedProperty(this, 'apiEndpoint', modelOptions && modelOptions.apiEndpoint);\n        addLockedProperty(this, 'javaClass', modelOptions && modelOptions.klass);\n        addLockedProperty(this, 'identifiableObject', modelOptions && modelOptions.identifiableObject);\n        addLockedProperty(this, 'modelProperties', properties);\n        addLockedProperty(this, 'modelValidations', validations);\n        addLockedProperty(this, 'attributeProperties', attributes);\n        addLockedProperty(this, 'authorities', authorities);\n\n        this.filters = Filters.getFilters(this);\n\n        // TODO: The function getOwnedPropertyJSON should probably not be exposed, perhaps we could have a getJSONForModel(ownedPropertiesOnly=true) method.\n        this.getOwnedPropertyJSON = getOwnedPropertyJSON.bind(this);\n    }\n\n    filter() {\n        return this.clone().filters;\n    }\n\n    /**\n     * @method create\n     *\n     * @param {Object} [data] Datavalues that should be loaded into the model.\n     *\n     * @returns {Model} Returns the newly created model instance.\n     *\n     * @description\n     * Creates a fresh Model instance based on the `ModelDefinition`. If data is passed into the method that\n     * data will be loaded into the matching properties of the model.\n     *\n     * ```js\n     * dataElement.create({name: 'ANC', id: 'd2sf33s3ssf'});\n     * ```\n     */\n    create(data) {\n        const model = Model.create(this);\n        const validations = model.modelDefinition.modelValidations;\n        const models = ModelDefinitions.getModelDefinitions();\n        const dataValues = Object.assign({}, data);\n\n        if (data) {\n            // Set the data values onto the model directly\n            Object\n                .keys(model)\n                .forEach((modelProperty) => {\n                    const referenceType =\n                        validations[modelProperty].hasOwnProperty('referenceType') &&\n                        validations[modelProperty].referenceType ||\n                        models.hasOwnProperty(modelProperty) && modelProperty;\n\n                    // For collections of objects, create ModelCollectionProperties rather than plain arrays\n                    if (\n                        referenceType &&\n                        models.hasOwnProperty(referenceType) &&\n                        Array.isArray(data[modelProperty])\n                    ) {\n                        // Object properties that are not themselves instances of models need special handling because\n                        // we can't turn them into ModelCollectionProperties\n                        // TODO: Proper generic handling of translations\n                        if (modelProperty === 'translations' || modelProperty === 'greyedFields') {\n                            dataValues[modelProperty] = data[modelProperty];\n                        } else {\n                            dataValues[modelProperty] = ModelCollectionProperty\n                                .create(\n                                    model,\n                                    models[referenceType],\n                                    data[modelProperty].map(d => models[referenceType].create(d))\n                                );\n                        }\n                    }\n                    model.dataValues[modelProperty] = dataValues[modelProperty];\n                });\n        } else {\n            // Create empty ModelCollectionProperties for models without data.\n            Object.keys(model)\n                .filter(shouldBeModelCollectionProperty(model, models))\n                .forEach((modelProperty) => {\n                    const referenceType = model.modelDefinition.modelValidations[modelProperty].referenceType;\n\n                    model.dataValues[modelProperty] = ModelCollectionProperty.create(model, models[referenceType], []);\n                });\n\n            // When no initial values are provided we are dealing with a new Model. For some properties there are\n            // implicit default values that should be set. DHIS2 has some default values for models that would implicitly\n            // be set when omitting sending a value on POST, we'll set these properties to their default values so they\n            // are reflected in read operations on the model and to make them more transparent.\n            const defaultValues = getDefaultValuesForModelType(model.modelDefinition.name);\n            const checkForModelProperty = shouldBeModelCollectionProperty(model, models);\n\n            Object\n                .keys(model)\n                .filter((modelProperty) => !checkForModelProperty(modelProperty))\n                .forEach((modelProperty) => {\n                    model.dataValues[modelProperty] = defaultValues[modelProperty];\n                });\n        }\n\n        return model;\n    }\n\n    clone() {\n        const ModelDefinitionPrototype = Object.getPrototypeOf(this);\n        const priorFilters = this.filters.filters;\n        let clonedDefinition = Object.create(ModelDefinitionPrototype);\n\n        clonedDefinition = copyOwnProperties(clonedDefinition, this);\n        clonedDefinition.filters = Filters.getFilters(clonedDefinition);\n        clonedDefinition.filters.filters = priorFilters.map(filter => filter);\n\n        return clonedDefinition;\n    }\n\n    /**\n     * @method get\n     *\n     * @param {String} identifier\n     * @param {Object} [queryParams={fields: ':all'}] Query parameters that should be passed to the GET query.\n     * @returns {Promise} Resolves with a `Model` instance or an error message.\n     *\n     * @description\n     * Get a `Model` instance from the api loaded with data that relates to `identifier`.\n     * This will do an API call and return a Promise that resolves with a `Model` or rejects with the api error message.\n     *\n     * ```js\n     * //Do a get request for the dataElement with given id (d2sf33s3ssf) and print it's name\n     * //when that request is complete and the model is loaded.\n     * dataElement.get('d2sf33s3ssf')\n     *   .then(model => console.log(model.name));\n     * ```\n     */\n    get(identifier, queryParams = { fields: ':all,attributeValues[:all,attribute[id,name,displayName]]' }) {\n        checkDefined(identifier, 'Identifier');\n\n        if (Array.isArray(identifier)) {\n            return this.list({ filter: [`id:in:[${identifier.join(',')}]`] });\n        }\n\n        // TODO: should throw error if API has not been defined\n        return this.api.get([this.apiEndpoint, identifier].join('/'), queryParams)\n            .then((data) => this.create(data))\n            .catch((response) => {\n                if (response.message) {\n                    return Promise.reject(response.message);\n                }\n\n                return Promise.reject(response);\n            });\n    }\n\n    /**\n     * @method list\n     *\n     * @param {Object} [queryParams={fields: ':all'}] Query parameters that should be passed to the GET query.\n     * @returns {Promise} ModelCollection collection of models objects of the `ModelDefinition` type.\n     *\n     * @description\n     * Loads a list of models.\n     *\n     * ```js\n     * // Loads a list of models and prints their name.\n     * dataElement.list()\n     *   .then(modelCollection => {\n     *     modelCollection.forEach(model => console.log(model.name));\n     *   });\n     * ```\n     */\n    list(queryParams = {}) {\n        const definedFilters = this.filters.getFilters();\n        // FIXME: Looks like when specific filters are defined the model.filter() filters are not applied (they should probably be merged)\n        if (!isDefined(queryParams.filter) && definedFilters.length) {\n            queryParams.filter = definedFilters; // eslint-disable-line no-param-reassign\n        }\n\n        return this.api.get(this.apiEndpoint, Object.assign({ fields: ':all' }, queryParams))\n            .then((responseData) => ModelCollection.create(\n                this,\n                responseData[this.plural].map((data) => this.create(data)),\n                responseData.pager\n            ));\n    }\n\n    /**\n     * @method save\n     *\n     * @param {Model} model The model that should be saved to the server.\n     * @returns {Promise} A promise which resolves when the save was successful\n     * or rejects when it failed. The promise will resolve with the data that is\n     * returned from the server.\n     *\n     * @description\n     * This method is used by the `Model` instances to save the model when calling `model.save()`.\n     *\n     * @note {warning} This should generally not be called directly.\n     */\n    // TODO: check the return status of the save to see if it was actually successful and not ignored\n    save(model) {\n        if (isAnUpdate(model)) {\n            const updateUrl = model.dataValues.href;\n            const jsonPayload = getOwnedPropertyJSON.bind(this)(model);\n\n            // Save the existing model\n            return this.api.update(updateUrl, jsonPayload, true);\n        }\n\n        return this.saveNew(model);\n    }\n\n    saveNew(model) {\n        const jsonPayload = getOwnedPropertyJSON.bind(this)(model);\n\n        // Its a new object\n        return this.api.post(this.apiEndpoint, jsonPayload);\n    }\n\n    /**\n     * @method getOwnedPropertyNames\n     *\n     * @returns {String[]} Returns an array of property names.\n     *\n     * @description\n     * This method returns a list of property names that that are defined\n     * as \"owner\" properties on this schema. This means these properties are used\n     * when saving the model to the server.\n     *\n     * ```js\n     * dataElement.getOwnedPropertyNames()\n     * ```\n     */\n    getOwnedPropertyNames() {\n        return Object.keys(this.modelValidations)\n            .filter(propertyName => this.modelValidations[propertyName].owner);\n    }\n\n    /**\n     * @method delete\n     *\n     * @returns {Promise} Returns a promise to the deletion operation\n     *\n     * @description\n     * This method is used by the `Model` instances to delete the model when calling `model.delete()`.\n     *\n     * @note {warning} This should generally not be called directly.\n     */\n    delete(model) {\n        if (model.dataValues.href) {\n            return this.api.delete(model.dataValues.href);\n        }\n        return this.api.delete([model.modelDefinition.apiEndpoint, model.dataValues.id].join('/'));\n    }\n\n    /**\n     * @method createFromSchema\n     * @static\n     *\n     * @param {Object} schema A schema definition received from the web api (/api/schemas)\n     * @param {Object[]} attributes A list of attribute objects that describe custom attributes (/api/attributes)\n     *\n     * @returns {ModelDefinition} Frozen model definition object.\n     *\n     * @description\n     * This method creates a new `ModelDefinition` based on a JSON structure called\n     * a schema. A schema represents the structure of a domain model as it is\n     * required by DHIS. Since these schemas can not be altered on the server from\n     * the modelDefinition is frozen to prevent accidental changes to the definition.\n     *\n     * ```js\n     * ModelDefinition.createFromSchema(schemaDefinition, attributes);\n     * ```\n     *\n     * @note {info} An example of a schema definition can be found on\n     * https://apps.dhis2.org/demo/api/schemas/dataElement\n     */\n    static createFromSchema(schema, attributes = []) {\n        let ModelDefinitionClass;\n        checkType(schema, Object, 'Schema');\n\n        if (typeof ModelDefinition.specialClasses[schema.name] === 'function') {\n            ModelDefinitionClass = ModelDefinition.specialClasses[schema.name];\n        } else {\n            ModelDefinitionClass = ModelDefinition;\n        }\n\n        return Object.freeze(new ModelDefinitionClass(\n            schema.name,\n            schema.plural,\n            schema,\n            Object.freeze(createPropertiesObject(schema.properties)),\n            Object.freeze(createValidations(schema.properties)),\n            attributes\n                .reduce((current, attributeDefinition) => {\n                    current[attributeDefinition.name] = attributeDefinition; // eslint-disable-line no-param-reassign\n                    return current;\n                }, {}),\n            schema.authorities\n        ));\n    }\n}\n\nclass UserModelDefinition extends ModelDefinition {\n    // TODO: userCredentials should always be included, no matter what the query params, that is currently not the case\n    get(identifier, queryParams = { fields: ':all,userCredentials[:owner]' }) {\n        return super.get(identifier, queryParams);\n    }\n}\n\nclass DataSetModelDefinition extends ModelDefinition {\n    create(data = {}) {\n        const hasData = Boolean(Object.keys(data).length);\n\n        // Filter out the compulsoryDataElementOperands structure from the retrieved data\n        // This structure does not follow the convention of a typical reference. We can not create a proper\n        // ModelCollection for this collection.\n        const dataClone = Object\n            .keys(data)\n            .filter(key => key !== 'compulsoryDataElementOperands')\n            .reduce((obj, key) => {\n                obj[key] = data[key]; // eslint-disable-line no-param-reassign\n                return obj;\n            }, {});\n\n        // Create the model using the usual way of creating a model\n        // Only pass data when there is data in the object passed to the constructor. This will guarantee\n        // that the empty ModelCollections are created properly.\n        const model = super.create(hasData ? dataClone : undefined);\n\n        // Set the compulsoryDataElementOperands onto the dataValues so it will be included during the save operations\n        model.dataValues.compulsoryDataElementOperands = data.compulsoryDataElementOperands;\n\n        return model;\n    }\n}\n\nModelDefinition.specialClasses = {\n    user: UserModelDefinition,\n    dataSet: DataSetModelDefinition,\n};\n\nexport default ModelDefinition;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/model/ModelDefinition.js\n **/","import { checkType, isType } from '../lib/check';\n\n/**\n * @class ModelDefinitions\n *\n * @description\n * Contains all the `ModelDefinition`s that are available. The definitions are properties on the object.\n * This would be used as a main entry point to do any interaction.\n *\n * After calling the initialise function `d2({baseUrl: 'dhis/api'})` this object is the `models` property\n * that allows you to access\n *\n * ```js\n * models.dataElement.getList();\n * ```\n */\nclass ModelDefinitions {\n    // TODO: Elaborate this documentation\n    /**\n     * @method add\n     * @param {ModelDefinition} modelDefinition Add a model definition to the definitions collection\n     *\n     * @description\n     * This will allow you to add your own custom ModelDefinitions.\n     *\n     * The Definition object should have the following properties\n     * `modelName, modelNamePlural, modelOptions, properties, validations`\n     *\n     * ```js\n     * models.add({name: 'MyDefinition', plural: 'MyDefinitions', endPointname: '/myDefinition'});\n     * ```\n     */\n    add(modelDefinition) {\n        try {\n            checkType(modelDefinition.name, 'string');\n        } catch (e) {\n            throw new Error('Name should be set on the passed ModelDefinition to add one');\n        }\n\n        if (this[modelDefinition.name]) {\n            throw new Error(['Model', modelDefinition.name, 'already exists'].join(' '));\n        }\n        this[modelDefinition.name] = modelDefinition;\n\n        if (isType(modelDefinition.plural, 'string')) {\n            this[modelDefinition.plural] = modelDefinition;\n        }\n    }\n\n    /**\n     * @method mapThroughDefinitions\n     *\n     * @param {Function} transformer Transformer function that will be run for each `ModelDefinition`\n     * @returns {Array} Array with the `ModelDefinition` objects.\n     *\n     * @description\n     * Map through the modelDefinitions like you would with a simple `Array.map()`\n     *\n     * ```js\n     * models.mapThroughDefinitions(definition => console.log(definition.name);\n     * ```\n     *\n     * @note {info} When mapping through the definition list `transformer` is called with the just the definition\n     * Unlike other map functions, no index or the full object is being passed.\n     *\n     * @note {warn} The resulting array contains references to the actual objects. It does not work like immutable array functions.\n     *\n     */\n    mapThroughDefinitions(transformer) {\n        const result = [];\n        let modelDefinition;\n\n        checkType(transformer, 'function', 'transformer');\n\n        for (modelDefinition in this) {\n            if (this.hasOwnProperty(modelDefinition) && !(this[modelDefinition].plural === modelDefinition)) {\n                result.push(transformer(this[modelDefinition]));\n            }\n        }\n\n        return result;\n    }\n}\n\n// Model definitions singleton!\nfunction getModelDefinitions() {\n    if (getModelDefinitions.modelDefinitions) {\n        return getModelDefinitions.modelDefinitions;\n    }\n    return (getModelDefinitions.modelDefinitions = new ModelDefinitions());\n}\n\nModelDefinitions.getModelDefinitions = getModelDefinitions;\n\nexport default ModelDefinitions;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/model/ModelDefinitions.js\n **/","import { isValidUid, isArray, checkType } from '../lib/check';\nimport { throwError } from '../lib/utils';\nimport Model from './Model';\nimport ModelDefinition from './ModelDefinition';\nimport Pager from '../pager/Pager';\n\nfunction throwIfContainsOtherThanModelObjects(values) {\n    if (values && values[Symbol.iterator]) {\n        const toCheck = [...values];\n        toCheck.forEach((value) => {\n            if (!(value instanceof Model)) {\n                throwError('Values of a ModelCollection must be instances of Model');\n            }\n        });\n    }\n}\n\nfunction throwIfContainsModelWithoutUid(values) {\n    if (values && values[Symbol.iterator]) {\n        const toCheck = [...values];\n        toCheck.forEach((value) => {\n            if (!isValidUid(value.id)) {\n                throwError('Can not add a Model without id to a ModelCollection');\n            }\n        });\n    }\n}\n\n/**\n * @class ModelCollection\n *\n * @description\n * Collection of `Model` objects that can be interacted upon. Can contain a pager object to easily navigate\n * pages within the system.\n */\nclass ModelCollection {\n\n    /**\n     * @constructor\n     *\n     * @param {ModelDefinition} modelDefinition The `ModelDefinition` that this collection is for. This defines the type of models that\n     * are allowed to be added to the collection.\n     * @param {Model[]} values Initial values that should be added to the collection.\n     * @param {Object} pagerData Object with pager data. This object contains data that will be put into the `Pager` instance.\n     *\n     * @description\n     *\n     * Creates a new `ModelCollection` object based on the passed `modelDefinition`. Additionally values can be added by passing\n     * `Model` objects in the `values` parameter. The collection also exposes a pager object which can be used to navigate through\n     * the pages in the collection. For more information see the `Pager` class.\n     */\n    constructor(modelDefinition, values, pagerData) {\n        checkType(modelDefinition, ModelDefinition);\n        /**\n         * @property {ModelDefinition} modelDefinition The `ModelDefinition` that this collection is for. This defines the type of models that\n         * are allowed to be added to the collection.\n         */\n        this.modelDefinition = modelDefinition;\n\n        /**\n         * @property {Pager} pager Pager object that is created from the pagerData that was passed when the collection was constructed. If no pager data was present\n         * the pager will have default values.\n         */\n        this.pager = new Pager(pagerData, modelDefinition);\n\n        // We can not extend the Map object right away in v8 contexts.\n        this.valuesContainerMap = new Map();\n        this[Symbol.iterator] = this.valuesContainerMap[Symbol.iterator].bind(this.valuesContainerMap);\n\n        throwIfContainsOtherThanModelObjects(values);\n        throwIfContainsModelWithoutUid(values);\n\n        // Add the values separately as not all Iterators return the same values\n        if (isArray(values)) {\n            values.forEach((value) => this.valuesContainerMap.set(value.id, value));\n        }\n    }\n\n    /**\n     * @property {Number} size The number of Model objects that are in the collection.\n     *\n     * @description\n     * Contains the number of Model objects that are in this collection. If the collection is a collection with a pager. This\n     * does not take into account all the items in the database. Therefore when a pager is present on the collection\n     * the size will return the items on that page. To get the total number of items consult the pager.\n     */\n    get size() {\n        return this.valuesContainerMap.size;\n    }\n\n    /**\n     * @method add\n     *\n     * @param {Model} value Model instance to add to the collection.\n     * @returns {ModelCollection} Returns itself for chaining purposes.\n     *\n     * @throws {Error} When the passed value is not an instance of `Model`\n     * @throws {Error} Throws error when the passed value does not have a valid id.\n     *\n     * @description\n     * Adds a Model instance to the collection. The model is checked if it is a correct instance of `Model` and if it has\n     * a valid id. A valid id is a uid string of 11 alphanumeric characters.\n     */\n    add(value) {\n        throwIfContainsOtherThanModelObjects([value]);\n        throwIfContainsModelWithoutUid([value]);\n\n        this.set(value.id, value);\n        return this;\n    }\n\n    /**\n     * @method toArray\n     *\n     * @returns {Array} Returns the values of the collection as an array.\n     *\n     * @description\n     * If working with the Map type object is inconvenient this method can be used to return the values\n     * of the collection as an Array object.\n     */\n    toArray() {\n        const resultArray = [];\n\n        this.forEach((model) => {\n            resultArray.push(model);\n        });\n\n        return resultArray;\n    }\n\n    static create(modelDefinition, values, pagerData) {\n        return new ModelCollection(modelDefinition, values, pagerData);\n    }\n\n    static throwIfContainsOtherThanModelObjects(value) {\n        return throwIfContainsOtherThanModelObjects(value);\n    }\n\n    static throwIfContainsModelWithoutUid(value) {\n        return throwIfContainsModelWithoutUid(value);\n    }\n\n    /**\n     * @method clear\n     *\n     * @returns {this} Returns itself for chaining purposes;\n     *\n     * @description\n     * Clear the collection and remove all it's values.\n     */\n    // TODO: Reset the pager?\n    clear() {\n        return this.valuesContainerMap.clear.apply(this.valuesContainerMap);\n    }\n\n    delete(...args) {\n        return this.valuesContainerMap.delete.apply(this.valuesContainerMap, args);\n    }\n\n    entries() {\n        return this.valuesContainerMap.entries.apply(this.valuesContainerMap);\n    }\n\n    // FIXME: This calls the forEach function with the values Map and not with the ModelCollection as the third argument\n    forEach(...args) {\n        return this.valuesContainerMap.forEach.apply(this.valuesContainerMap, args);\n    }\n\n    get(...args) {\n        return this.valuesContainerMap.get.apply(this.valuesContainerMap, args);\n    }\n\n    has(...args) {\n        return this.valuesContainerMap.has.apply(this.valuesContainerMap, args);\n    }\n\n    keys() {\n        return this.valuesContainerMap.keys.apply(this.valuesContainerMap);\n    }\n\n    set(...args) {\n        return this.valuesContainerMap.set.apply(this.valuesContainerMap, args);\n    }\n\n    values() {\n        return this.valuesContainerMap.values.apply(this.valuesContainerMap);\n    }\n}\n\nexport default ModelCollection;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/model/ModelCollection.js\n **/","import { isDefined } from '../lib/check';\n\n/**\n * @class Pager\n *\n * @description\n * Pager object that can be used to navigate pages within a `Modelcollection`\n */\nclass Pager {\n\n    /**\n     * @constructor\n     *\n     * @param {Object} [pager={page: 1, pageCount: 1}] Paging information object.\n     * @param {Object} [pagingHandler={list: () => Promise.reject('No handler available')}] Paging handler object. The requirement for this object is that it has a list method.\n     *\n     * @description\n     * Returns a newly created pager object with methods to navigate pages.\n     */\n    constructor(\n        pager = { page: 1, pageCount: 1 },\n        pagingHandler = { list: () => Promise.reject('No handler available') }\n    ) {\n        /**\n         * @property {number} page Current page number\n         */\n        this.page = pager.page;\n\n        /**\n         * @property {number} pageCount The total number of pages available\n         */\n        this.pageCount = pager.pageCount;\n\n        /**\n         * @property {number} total The total number of items available.\n         *\n         * @description\n         * This represents the total number of items available in the system. Note it is not the number of items\n         * on the current page.\n         */\n        this.total = pager.total;\n\n        /**\n         * @property {string} nextPage The url to the next page.\n         *\n         * @description\n         * If there is no next page then this will be undefined.\n         */\n        this.nextPage = pager.nextPage;\n\n        /**\n         * @property {string} prevPage The url to the previous page\n         *\n         * @description\n         * If there is no previous page then this will be undefined.\n         */\n        this.prevPage = pager.prevPage;\n\n        this.pagingHandler = pagingHandler;\n    }\n\n    /**\n     * @method hasNextPage\n     *\n     * @returns {Boolean} Result is true when there is a next page, false when there is not.\n     *\n     * @description\n     * Check whether there is a next page.\n     */\n    hasNextPage() {\n        return isDefined(this.nextPage);\n    }\n\n    /**\n     * @method hasPreviousPage\n     *\n     * @returns {Boolean} Result is true when there is a previous page, false when there is not.\n     *\n     * @description\n     * Check whether there is a previous page.\n     */\n    hasPreviousPage() {\n        return isDefined(this.prevPage);\n    }\n\n    /**\n     * @method getNextPage\n     *\n     * @returns {Promise} Promise that resolves with a new `ModelCollection` containing the next page's data. Or rejects with\n     * a string when there is no next page for this collection or when the request for the next page failed.\n     */\n    getNextPage() {\n        if (this.hasNextPage()) {\n            return this.goToPage(this.page + 1);\n        }\n        return Promise.reject('There is no next page for this collection');\n    }\n\n    /**\n     * @method getPreviousPage\n     *\n     * @returns {Promise} Promise that resolves with a new `ModelCollection` containing the previous page's data. Or rejects with\n     * a string when there is no previous page for this collection or when the request for the previous page failed.\n     */\n    getPreviousPage() {\n        if (this.hasPreviousPage()) {\n            return this.goToPage(this.page - 1);\n        }\n        return Promise.reject('There is no previous page for this collection');\n    }\n\n    /**\n     * @method goToPage\n     *\n     * @param {Number} pageNr The number of the page you wish to navigate to.\n     * @returns {Promise} Promise that resolves with a new `ModelCollection` containing the data for the requested page.\n     */\n    // TODO: Throwing the errors here is not really consistent with the rejection of promises for the getNextPage and getPreviousPage\n    goToPage(pageNr) {\n        if (pageNr < 1) {\n            throw new Error('PageNr can not be less than 1');\n        }\n        if (pageNr > this.pageCount) {\n            throw new Error(`PageNr can not be larger than the total page count of ${this.pageCount}`);\n        }\n\n        return this.pagingHandler.list({ page: pageNr });\n    }\n}\n\nexport default Pager;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/pager/Pager.js\n **/","import ModelCollection from './ModelCollection';\n\n\n/**\n * @class ModelCollectionProperty\n *\n * @description\n * A ModelCollectionProperty instance is a ModelCollection that is a property of\n * a model instance. ModelCollectionProperties can be operated on independently of\n * the Model that owns them.\n */\nclass ModelCollectionProperty extends ModelCollection {\n\n    /**\n     * @constructor\n     *\n     * @param {Model} parentModel The `Model` of the parent of this `ModelCollectionProperty`\n     * @param {ModelDefinition} modelDefinition The `ModelDefinition` that this `ModelCollection` property is for\n     * @param {Model[]} values Initial values that should be added to the collection property\n     *\n     * @description\n     *\n     * Creates a new `ModelCollectionProperty` object. This is a subclass of `ModelCollection`, which adds logic\n     * for handling adding and removing elements to the collection and saving the changes to the API.\n     */\n    constructor(parentModel, modelDefinition, values) {\n        super(modelDefinition, values, undefined);\n\n        // Dirty bit\n        this.dirty = false;\n        // Keep track of added and removed elements\n        this.added = new Set();\n        this.removed = new Set();\n\n        // Store the parent model of this collection so we can construct the URI for API calls\n        this.parentModel = parentModel;\n    }\n\n    /**\n     * @method add\n     *\n     * @param {Model} value Model instance to add to the collection.\n     * @returns {ModelCollectionProperty} Returns itself for chaining purposes.\n     *\n     * @description\n     * Calls the `add` method on the parent `ModelCollection` class, and then performs checks to keep track of\n     * what, if any, changes that have been made to the collection.\n     */\n    add(value) {\n        // TODO: Allow adding plain ID's that aren't Model instances maybe?\n        if (this.valuesContainerMap.has(value.id)) {\n            return this;\n        }\n\n        super.add(value);\n\n        if (this.removed.has(value.id)) {\n            this.removed.delete(value.id);\n        } else {\n            this.added.add(value.id);\n        }\n\n        this.updateDirty();\n        return this;\n    }\n\n    /**\n     * @method remove\n     *\n     * @param {Model} value Model instance to remove from the collection.\n     * @returns {ModelCollectionProperty} Returns itself for chaining purposes.\n     *\n     * @description\n     * If the collection contains an object with the same id as the `value` parameter, that object is removed\n     * from the collection. Checks are then performed to keep track of what, if any, changes that have been\n     * made to the collection.\n     */\n    remove(value) {\n        // TODO: Allow removing plain ID's that aren't Model instances maybe?\n        ModelCollection.throwIfContainsOtherThanModelObjects([value]);\n        ModelCollection.throwIfContainsModelWithoutUid([value]);\n\n        if (this.delete(value.id)) {\n            if (this.added.has(value.id)) {\n                this.added.delete(value.id);\n            } else {\n                this.removed.add(value.id);\n            }\n        }\n\n        this.updateDirty();\n        return this;\n    }\n\n    /**\n     * @method updateDirty\n     *\n     * @returns {boolean} True if the collection has changed, false otherwise.\n     *\n     * @description\n     * Checks whether any changes have been made to the collection, and updates the dirty flag accordingly.\n     */\n    updateDirty() {\n        this.dirty = this.added.size > 0 || this.removed.size > 0;\n        return this.dirty;\n    }\n\n    /**\n     * @method save\n     *\n     * @returns {Promise} A `Promise`\n     *\n     * @description\n     * If any changes have been made to the collection, these changes will be submitted to the API. The returned\n     * promise will resolve successfully when the changes have been saved to the API, and will be rejected if\n     * either the changes weren't saved or if there were no changes to save.\n     */\n    save() {\n        // TODO: Use Promise constructor and call resolve/reject as appropriate\n        if (!this.dirty) {\n            return Promise.reject('Nothing to save!');\n        }\n\n        const api = this.modelDefinition.api;\n\n        const queries = [];\n\n        if (this.added.size) {\n            Array.from(this.added).forEach(id => {\n                queries.push(api.post([this.parentModel.href, this.modelDefinition.plural, id].join('/')));\n            });\n        }\n        if (this.removed.size) {\n            Array.from(this.removed).forEach(id => {\n                queries.push(api.delete([this.parentModel.href, this.modelDefinition.plural, id].join('/')));\n            });\n        }\n\n        return Promise.all(queries)\n            .then(() => {\n                this.added = new Set();\n                this.removed = new Set();\n                this.updateDirty();\n                return Promise.resolve();\n            })\n            .catch((err) => Promise.reject('Failed to alter collection:', err));\n    }\n\n    /**\n     * @method create\n     *\n     * @param {Model} parentModel\n     * @param {ModelDefinition} modelDefinition\n     * @param {Model[]} values\n     * @returns {ModelCollectionProperty}\n     *\n     * @description\n     * See `ModelCollectionProperty.constructor`.\n     */\n    static create(parentModel, modelDefinition, values) {\n        return new ModelCollectionProperty(parentModel, modelDefinition, values);\n    }\n}\n\n\nexport default ModelCollectionProperty;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/model/ModelCollectionProperty.js\n **/","import { throwError } from './utils';\nimport { isString } from './check';\n\nclass SchemaTypes {\n    getTypes() {\n        return [\n            'TEXT',\n            'NUMBER',\n            'INTEGER',\n            'BOOLEAN',\n            'EMAIL',\n            'PASSWORD',\n            'URL',\n            'PHONENUMBER',\n            'GEOLOCATION', // TODO: Geo location could be an advanced type of 2 numbers / strings?\n            'COLOR',\n            'COMPLEX',\n            'COLLECTION',\n            'REFERENCE',\n            'DATE',\n            'COMPLEX',\n            'IDENTIFIER',\n            'CONSTANT',\n        ];\n    }\n\n    typeLookup(propertyType) {\n        if (this.getTypes().indexOf(propertyType) >= 0 && isString(propertyType)) {\n            return propertyType;\n        }\n\n        return throwError(['Type from schema \"', propertyType, '\" not found available type list.'].join(''));\n    }\n}\n\nexport default new SchemaTypes();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/SchemaTypes.js\n **/","import { isType } from '../lib/check';\nimport Filter from '../model/Filter';\n\nclass Filters {\n    constructor(modelDefinition) {\n        this.filters = [];\n        this.modelDefinition = modelDefinition;\n    }\n\n    on(propertyName) {\n        return Filter.getFilter(this).on(propertyName);\n    }\n\n    add(filter) {\n        if (!isType(filter, Filter)) {\n            throw new TypeError('filter should be an instance of Filter');\n        }\n        this.filters.push(filter);\n    }\n\n    list() {\n        return this.modelDefinition.list();\n    }\n\n    getFilters() {\n        return this.filters.map(filter => filter.getQueryParamFormat());\n    }\n\n    getReturn() {\n        return this.modelDefinition;\n    }\n\n    static getFilters(modelDefinition) {\n        return new Filters(modelDefinition);\n    }\n}\n\nexport default Filters;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/model/Filters.js\n **/","import { checkDefined } from '../lib/check';\n\nconst FILTER_COMPARATORS = {\n    /**\n     * @method equals\n     * @returns {Filter} Returns the modified filter for chaining\n     *\n     * @description\n     * This method can be used to add a equals filter value\n     */\n    equals: 'eq',\n    /**\n     * @method like\n     * @returns {Filter} Returns the modified filter for chaining\n     *\n     * @description\n     * This method can be used to add a like filter value\n     */\n    like: 'like',\n    /**\n     * @method ilike\n     * @returns {Filter} Returns the modified filter for chaining\n     *\n     * @description\n     * This method can be used to add a ilike filter value\n     */\n    ilike: 'ilike',\n    notEqual: 'ne',\n};\n\n/**\n * @class Filter\n * @description\n * Filter class that can be used to build api endpoint filters using a semi-natural language style.\n */\nclass Filter {\n    /**\n     * @constructor\n     * @param {Filters} filters Filters list that this filter will be added to when it is completed.\n     */\n    constructor(filters) {\n        this.filters = filters;\n        this.propertyName = 'name';\n        this.comparator = 'like';\n        this.filterValue = undefined;\n    }\n\n    /**\n     * @method on\n     * @param {String} propertyName Property name that the filter should be applied on.\n     * @returns {Filter}\n     */\n    on(propertyName) {\n        checkDefined(propertyName, 'Property name to filter on');\n\n        this.propertyName = propertyName;\n        return this;\n    }\n\n    getQueryParamFormat() {\n        return [this.propertyName, this.comparator, this.filterValue].join(':');\n    }\n\n    /**\n     * @method getFilter\n     * @static\n     *\n     * @param {Filters} filters Filters list that this filter will be added to when it is completed.\n     *\n     * @returns A instance of the Filter class that can be used to create\n     * filters.\n     *\n     * @description\n     * Create a filter instance\n     */\n    static getFilter(filters) {\n        return new Filter(filters);\n    }\n}\n\n// Add the filters to the Filter prototype\n// TODO: Change to for..of. Currently would break e2e tests because of polyfill\nObject.keys(FILTER_COMPARATORS).forEach(filter => {\n    Object.defineProperty(Filter.prototype, filter, {\n        value: function filterGetter(filterValue) {\n            checkDefined(filterValue, 'filterValue');\n\n            this.comparator = FILTER_COMPARATORS[filter];\n            this.filterValue = filterValue;\n\n            this.filters.add(this);\n\n            return this.filters.getReturn();\n        },\n    });\n});\n\nexport default Filter;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/model/Filter.js\n **/","import organisationUnitGroupSetDefaults from './model-defaults/organisationUnitGroupSet';\nimport categoryDefaults from './model-defaults/category';\nimport categoryOptionGroupSetDefaults from './model-defaults/categoryOptionGroupSet';\nimport dataElementDefaults from './model-defaults/dataElement';\nimport dataElementGroupSetDefaults from './model-defaults/dataElementGroupSet';\nimport dataSetDefaults from './model-defaults/dataSet';\n\nexport const defaultValues = new Map([\n    ['organisationUnitGroupSet', organisationUnitGroupSetDefaults],\n    ['category', categoryDefaults],\n    ['categoryOptionGroupSet', categoryOptionGroupSetDefaults],\n    ['dataElement', dataElementDefaults],\n    ['dataElementGroupSet', dataElementGroupSetDefaults],\n    ['dataSet', dataSetDefaults],\n]);\n\nexport function getDefaultValuesForModelType(modelDefinitionName) {\n    if (defaultValues.has(modelDefinitionName)) {\n        return defaultValues.get(modelDefinitionName);\n    }\n    return {};\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/model/config/index.js\n **/","export default {\n    dataDimension: true,\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/model/config/model-defaults/organisationUnitGroupSet.js\n **/","export default {\n    aggregationType: 'NONE',\n    valueType: 'TEXT',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/model/config/model-defaults/dataElement.js\n **/","export default {\n    expiryDays: 0,\n    openFuturePeriods: 0,\n    timelyDays: 15,\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/model/config/model-defaults/dataSet.js\n **/","import Api from '../api/Api';\n\nclass I18n {\n    constructor(sources = [], api = Api.getApi()) {\n        this.sources = sources;\n        this.api = api;\n        this.strings = new Set();\n        this.translations = undefined;\n    }\n\n    /**\n     * Adds a .properties file to the list of sources to load translations from\n     *\n     * Files are loaded in the order they're added, and the first translation of each string that's encountered will be\n     * used.\n     *\n     * @param {String} path\n     */\n    addSource(path) {\n        this.sources.push(path);\n    }\n\n    /**\n     * Adds one or more strings to the list of strings to translate\n     *\n     * @param {(String[]|String)} strings\n     */\n    addStrings(strings) {\n        if (typeof strings === 'string' && strings.trim().length > 0) {\n            this.strings.add(strings.trim());\n        } else {\n            Array.from(strings)\n                .filter(string => string && (`${string}`).trim().length > 0)\n                .forEach(string => this.strings.add(string));\n        }\n    }\n\n    /**\n     * Load translations\n     *\n     * First, all properties files (specified with addSource) are loaded.\n     * Then, if any untranslated strings remain, these are POSTed to the i18n endpoint of the DHIS2 API.\n     *\n     * @returns {Promise}\n     */\n    load() {\n        const i18n = this;\n        i18n.translations = {};\n\n        function parseProperties(text) {\n            return text.split('\\n').reduce((props, line) => {\n                const [key, value] = line.split('=').map(out => out.trim());\n                if (key !== undefined && value !== undefined && !props.hasOwnProperty(key)) {\n                    props[key] = value // eslint-disable-line no-param-reassign\n                        .replace(/\\\\u([0-9a-f]{4})/gi, (match, grp) => String.fromCharCode(parseInt(grp, 16)));\n                }\n                return props;\n            }, {});\n        }\n\n        const propFiles = [];\n\n        this.sources.forEach(source => {\n            propFiles.push(\n                i18n.api.request('GET', source, undefined, { dataType: 'text' }).then(\n                    (data) => Promise.resolve(parseProperties(data)),\n\n                    // Resolve errors to an empty object, so that one missing file doesn't prevent\n                    // the rest from being loaded\n                    () => Promise.resolve({})\n                )\n            );\n        });\n\n        return Promise.all(propFiles).then((propFile) => {\n            propFile.forEach(props => {\n                Object.keys(props).forEach(str => {\n                    if (!i18n.translations.hasOwnProperty(str)) {\n                        i18n.translations[str] = props[str];\n                    }\n                    this.strings.delete(str);\n                });\n            });\n\n            if (this.strings.size > 0) {\n                return i18n.api.post('i18n', Array.from(i18n.strings)).then((res) => {\n                    Object.keys(res)\n                        .filter(str => str !== res[str])\n                        .forEach(str => {\n                            i18n.translations[str] = res[str];\n                            i18n.strings.delete(str);\n                        });\n\n                    return Promise.resolve(i18n.translations);\n                });\n            }\n\n            return Promise.resolve(i18n.translations);\n        });\n    }\n\n    /**\n     * Gets the translated version of the specified string\n     *\n     * If no translation exists for the specified string, the string is returned as is with two asterisks on each side,\n     * in order to easily identify missing translations in the UI\n     *\n     * @param string\n     * @returns {String}\n     */\n    getTranslation(string, variables = {}) {\n        if (this.translations === undefined) {\n            throw new Error('Tried to translate before loading translations!');\n        }\n        const translatedString = this.translations.hasOwnProperty(string) ? this.translations[string] : `** ${string} **`;\n\n        if (Object.keys(variables).length) {\n            return translatedString\n                .replace(/\\$\\$(.+?)\\$\\$/gi, (match, partial) => variables[partial] || '');\n        }\n\n        return translatedString;\n    }\n\n    /**\n     * Check if a translation exists for the specified string\n     *\n     * @param string\n     * @returns {boolean} True if a translation exists, false otherwise\n     */\n    isTranslated(string) {\n        if (this.translations === undefined) {\n            throw new Error('Tried to translate before loading translations!');\n        }\n        return this.translations.hasOwnProperty(string);\n    }\n\n\n    /**\n     * Get the list of strings that don't have translations\n     *\n     * If no translations have been loaded yet, `undefined` is returned in stead.\n     *\n     * @returns {Array|undefined} Array of untranslated strings, or undefined if translations haven't been loaded\n     */\n    getUntranslatedStrings() {\n        return this.translations ? Array.from(this.strings) : undefined;\n    }\n\n    /**\n     * Return a new instance of this class\n     *\n     * @returns {I18n}\n     */\n    static getI18n() {\n        return new I18n();\n    }\n}\n\nexport default I18n;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/i18n/I18n.js\n **/","import defaultConfig from './defaultConfig';\nimport { isType, isString } from './lib/check';\n\nexport default class Config {\n    static create(...args) {\n        const configObjects = args\n            .filter(arg => arg);\n\n        if (!configObjects.every(configObject => isType(configObject, 'object'))) {\n            throw new Error('Expected Config parameter to have type object');\n        }\n\n        return Object.assign({}, defaultConfig, ...args);\n    }\n\n    static processConfigForD2(config, d2) {\n        const api = d2.Api.getApi();\n        d2.model.ModelDefinition.prototype.api = api; // eslint-disable-line no-param-reassign\n        d2.models = d2.model.ModelDefinitions.getModelDefinitions(); // eslint-disable-line no-param-reassign\n\n        if (isString(config.baseUrl)) {\n            api.setBaseUrl(config.baseUrl);\n        } else {\n            api.setBaseUrl('/api');\n        }\n\n        if (config.i18n && config.i18n.sources) {\n            Array.from(config.i18n.sources)\n                .forEach(source => d2.i18n.addSource(source));\n        }\n\n        if (config.i18n && config.i18n.strings) {\n            d2.i18n.addStrings(Array.from(config.i18n.strings));\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/config.js\n **/","export const noCreateAllowedFor = new Set([\n    'categoryOptionCombo',\n]);\n\nexport default {\n    baseUrl: '/api',\n    i18n: {\n        sources: new Set(),\n        strings: new Set(),\n    },\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/defaultConfig.js\n **/","import UserAuthorities from './UserAuthorities';\nimport UserSettings from './UserSettings';\nimport { noCreateAllowedFor } from '../defaultConfig';\n\nconst models = Symbol('models');\nconst propertiesToIgnore = new Set([\n    'userCredentials',\n    'userGroups',\n    'userRoles',\n    'organisationUnits',\n    'dataViewOrganisationUnits',\n]);\n\nconst authTypes = {\n    READ: ['READ'],\n    CREATE: ['CREATE', 'CREATE_PUBLIC', 'CREATE_PRIVATE'],\n    CREATE_PUBLIC: ['CREATE_PUBLIC'],\n    CREATE_PRIVATE: ['CREATE_PRIVATE'],\n    DELETE: ['DELETE'],\n    UPDATE: ['UPDATE'],\n    EXTERNALIZE: ['EXTERNALIZE'],\n};\n\nconst propertySymbols = Array\n    .from(propertiesToIgnore)\n    .reduce((result, property) => {\n        result[property] = Symbol(property); // eslint-disable-line no-param-reassign\n        return result;\n    }, {});\n\nfunction getUserPropertiesToCopy(currentUserObject) {\n    let properties;\n    // The user credentials object is confusing so we set the properties straight onto the current user\n    if (currentUserObject.userCredentials) {\n        properties = Object.assign({}, currentUserObject.userCredentials, currentUserObject);\n    } else {\n        properties = Object.assign({}, currentUserObject);\n    }\n\n    return Object.keys(properties)\n        .reduce((result, property) => {\n            if (propertiesToIgnore.has(property)) {\n                if (properties[property].map) {\n                    result[propertySymbols[property]] = properties[property] // eslint-disable-line no-param-reassign\n                        .map(value => value.id);\n                }\n            } else {\n                result[property] = properties[property]; // eslint-disable-line no-param-reassign\n            }\n            return result;\n        }, {});\n}\n\nfunction isInNoCreateAllowedForList(modelDefinition) {\n    return modelDefinition && noCreateAllowedFor.has(modelDefinition.name);\n}\n\nexport default class CurrentUser {\n    constructor(userData, userAuthorities, modelDefinitions, settings) {\n        Object.assign(this, getUserPropertiesToCopy(userData));\n\n        this.authorities = userAuthorities;\n        this[models] = modelDefinitions;\n\n        /**\n         * @property {UserSettings} settings Contains a reference to a `UserSettings` instance that can be used\n         * to retrieve and save system settings.\n         *\n         * @description\n         * ```js\n         * d2.currentUser.userSettings.get('keyUiLocale')\n         *  .then(userSettingsValue => {\n         *    console.log('UI Locale: ' + userSettingsValue);\n         *  });\n         * ```\n         */\n        this.userSettings = settings;\n    }\n\n    getUserGroups() {\n        const userGroupIds = this[propertySymbols.userGroups];\n\n        return this[models].userGroup.get({ filter: [`id:in:[${userGroupIds.join(',')}]`] });\n    }\n\n    getUserRoles() {\n        const userRoleIds = this[propertySymbols.userRoles];\n\n        return this[models].userRole.get({ filter: [`id:in:[${userRoleIds.join(',')}]`] });\n    }\n\n    getOrganisationUnits(listOptions = { fields: ':all,displayName,children[id,displayName,path,children::isNotEmpty]' }) {\n        const organisationUnitsIds = this[propertySymbols.organisationUnits];\n\n        return this[models].organisationUnit.list(\n            Object.assign({}, listOptions, { filter: [`id:in:[${organisationUnitsIds.join(',')}]`] })\n        );\n    }\n\n    getDataViewOrganisationUnits(listOptions = { fields: ':all,displayName,children[id,displayName,path,children::isNotEmpty]' }) {\n        const organisationUnitsIds = this[propertySymbols.dataViewOrganisationUnits];\n\n        return this[models].organisationUnit.list(\n            Object.assign({}, listOptions, { filter: [`id:in:[${organisationUnitsIds.join(',')}]`] })\n        );\n    }\n\n    checkAuthorityForType(authorityType, modelType) {\n        if (!modelType || !Array.isArray(modelType.authorities)) {\n            return false;\n        }\n\n        return modelType.authorities\n            // Filter the correct authority to check for from the model\n            .filter(authority => authorityType.some(authToHave => authToHave === authority.type))\n            // Check the left over schema authority types\n            .some(schemaAuthority => schemaAuthority.authorities\n                .some(authorityToCheckFor => this.authorities.has(authorityToCheckFor)) // Check if one of the schema authorities are available in the users authorities\n            );\n    }\n\n    checkCreateAuthorityForType(authType, modelType) {\n        // When the modelType is mentioned in the the list of modelTypes that are not\n        // allowed to be created we return false\n        if (isInNoCreateAllowedForList(modelType)) {\n            return false;\n        }\n\n        // Otherwise we check using the normal procedure for checking authorities\n        return this.checkAuthorityForType(authType, modelType);\n    }\n\n    canCreate(modelType) {\n        return this.checkCreateAuthorityForType(authTypes.CREATE, modelType);\n    }\n\n    canCreatePublic(modelType) {\n        return this.checkCreateAuthorityForType(authTypes.CREATE_PUBLIC, modelType);\n    }\n\n    canCreatePrivate(modelType) {\n        return this.checkCreateAuthorityForType(authTypes.CREATE_PRIVATE, modelType);\n    }\n\n    canDelete(modelType) {\n        return this.checkAuthorityForType(authTypes.DELETE, modelType);\n    }\n\n    canUpdate(modelType) {\n        if (this.checkAuthorityForType(authTypes.UPDATE, modelType)) {\n            return true;\n        }\n        return this.checkAuthorityForType(authTypes.CREATE, modelType);\n    }\n\n    get uiLocale() {\n        if (this.userSettings && this.userSettings.keyUiLocale) {\n            return this.userSettings.keyUiLocale;\n        }\n        return 'en';\n    }\n\n    static create(userData, authorities, modelDefinitions, userSettings) {\n        return new CurrentUser(\n            userData,\n            UserAuthorities.create(authorities),\n            modelDefinitions,\n            new UserSettings(userSettings)\n        );\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/current-user/CurrentUser.js\n **/","const auths = Symbol();\n\nexport default class UserAuthorities {\n    constructor(authorities = []) {\n        this[auths] = new Set(authorities);\n    }\n\n    has(authority) {\n        if (this[auths].has('ALL')) {\n            return true;\n        }\n        return this[auths].has(authority);\n    }\n\n    static create(authorities) {\n        return new UserAuthorities(authorities);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/current-user/UserAuthorities.js\n **/","import Api from '../api/Api';\nimport { isString } from '../lib/check';\n\n\n/**\n * @class UserSettings\n *\n * @description\n * Handles communication with the userSettings endpoint. Can be used to get or save userSettings.\n */\n\nclass UserSettings {\n    constructor(userSettings, api = Api.getApi()) {\n        this.api = api;\n\n        if (userSettings) {\n            Object.assign(this, userSettings);\n        }\n    }\n\n    /**\n     * @method all\n     *\n     * @returns {Promise} Promise that resolves with the usersettings object from the api.\n     *\n     * @description\n     * Loads all the user settings of current user and returns them as an object from the promise.\n     * ```js\n     * d2.currentUser.userSettings.all()\n     *  .then(userSettings => {\n     *    console.log('UI Locale: ' + userSettings.keyUiLocale);\n     *  });\n     * ```\n     */\n    all() {\n        return this.api.get('userSettings');\n    }\n\n    /**\n     * @method get\n     *\n     * @param {String} key The identifier of the user setting that should be retrieved.\n     * @returns {Promise} A promise that resolves with the value or will fail if the value is not available.\n     *\n     * @description\n     * ```js\n     * d2.currentUser.userSettings.get('keyUiLocale')\n     *  .then(userSettingValue => {\n     *    console.log('UI Locale: ' + userSettingValue);\n     *  });\n     * ```\n     */\n    get(key) {\n        function processValue(value) {\n            // Attempt to parse the response as JSON. If this fails we return the value as is.\n            try {\n                return JSON.parse(value);\n            } catch (e) {\n                return value;\n            }\n        }\n\n        return new Promise((resolve, reject) => {\n            if (!isString(key)) {\n                throw new TypeError('A \"key\" parameter should be specified when calling get() on userSettings');\n            }\n\n            this.api.get(['userSettings', key].join('/'), undefined, { dataType: 'text' })\n                .then(response => {\n                    const value = processValue(response);\n                    // Store the value on the user settings object\n                    this[key] = value;\n                    if (value) {\n                        resolve(processValue(response));\n                    }\n                    reject(new Error('The requested userSetting has no value or does not exist.'));\n                });\n        });\n    }\n\n    /**\n     * @method set\n     *\n     * @param {String} key The identifier of the user setting that should be saved.\n     * @param {String} value The new value of the user setting.\n     * @returns {Promise} A promise that will resolve when the new value has been saved, or fail if saving fails.\n     *\n     * @description\n     * ```js\n     * d2.currentUser.userSettings.set('keyUiLocale', 'fr')\n     *  .then(() => {\n     *   console.log('UI Locale is now \"fr\");\n     *  });\n     * ```\n     */\n    set(key, value) {\n        const settingUrl = ['userSettings', key].join('/');\n        if (value === null || (`${value}`).length === 0) {\n            return this.api.delete(settingUrl, { dataType: 'text' })\n                .then(this[key] = undefined);\n        }\n        return this.api.post(settingUrl, value, { dataType: 'text', contentType: 'text/plain' })\n            .then(this[key] = value);\n    }\n}\n\nexport default UserSettings;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/current-user/UserSettings.js\n **/"],"sourceRoot":""}
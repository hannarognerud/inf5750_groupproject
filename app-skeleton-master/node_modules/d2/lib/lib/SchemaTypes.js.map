{"version":3,"sources":["../../src/lib/SchemaTypes.js"],"names":[],"mappings":";;;;;;;;;;qBAA2B,SAAS;;qBACX,SAAS;;IAE5B,WAAW;aAAX,WAAW;8BAAX,WAAW;;;iBAAX,WAAW;;eACL,oBAAG;AACP,mBAAO,CACH,MAAM,EACN,QAAQ,EACR,SAAS,EACT,SAAS,EACT,OAAO,EACP,UAAU,EACV,KAAK,EACL,aAAa,EACb,aAAa;AACb,mBAAO,EACP,SAAS,EACT,YAAY,EACZ,WAAW,EACX,MAAM,EACN,SAAS,EACT,YAAY,EACZ,UAAU,CACb,CAAC;SACL;;;eAES,oBAAC,YAAY,EAAE;AACrB,gBAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,qBAAS,YAAY,CAAC,EAAE;AACtE,uBAAO,YAAY,CAAC;aACvB;;AAED,mBAAO,uBAAW,CAAC,oBAAoB,EAAE,YAAY,EAAE,kCAAkC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;SACxG;;;WA7BC,WAAW;;;qBAgCF,IAAI,WAAW,EAAE","file":"SchemaTypes.js","sourcesContent":["import { throwError } from './utils';\nimport { isString } from './check';\n\nclass SchemaTypes {\n    getTypes() {\n        return [\n            'TEXT',\n            'NUMBER',\n            'INTEGER',\n            'BOOLEAN',\n            'EMAIL',\n            'PASSWORD',\n            'URL',\n            'PHONENUMBER',\n            'GEOLOCATION', // TODO: Geo location could be an advanced type of 2 numbers / strings?\n            'COLOR',\n            'COMPLEX',\n            'COLLECTION',\n            'REFERENCE',\n            'DATE',\n            'COMPLEX',\n            'IDENTIFIER',\n            'CONSTANT',\n        ];\n    }\n\n    typeLookup(propertyType) {\n        if (this.getTypes().indexOf(propertyType) >= 0 && isString(propertyType)) {\n            return propertyType;\n        }\n\n        return throwError(['Type from schema \"', propertyType, '\" not found available type list.'].join(''));\n    }\n}\n\nexport default new SchemaTypes();\n"]}
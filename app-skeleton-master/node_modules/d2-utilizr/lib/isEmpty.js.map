{"version":3,"sources":["../src/isEmpty.js"],"names":[],"mappings":";;;;;kBAkBwB,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAhB,SAAS,OAAO,CAAC,KAAK,EAAE,gBAAgB,EAAE;AACrD,SAAO,AAAC,KAAK,IAAI,IAAI,KAChB,CAAC,gBAAgB,GAAG,KAAK,KAAK,EAAE,GAAG,KAAK,CAAA,AAAC,IACzC,uBAAQ,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,AAAC,IACrC,CAAC,sBAAM,KAAK,CAAC,IAAI,sBAAM,KAAK,CAAC,CAAA,IAAK,KAAK,CAAC,IAAI,KAAK,CAAC,AAAC,CAAC;CAC5D","file":"isEmpty.js","sourcesContent":["import isArray from './isArray';\nimport isMap from 'lodash.ismap';\nimport isSet from 'lodash.isset';\n\n/**\n * Check if a value is concidered _empty_. An _empty_ value is an empty `Set`, `Map` or `Array`.\n * Depending on if the `allowEmptyString` flag, empty strings are also considered _empty_\n *\n * @param {*} param Value to check\n * @param {boolean} allowEmptyString When set to true an empty string will not be considered _empty_.\n * @returns {boolean} Returns `true` when the value is _empty_, otherwise false\n *\n * @example\n * isEmpty(''); // Returns: true\n * isEmpty('', true); // Returns: false\n * isEmpty(null); // Returns: true\n * isEmpty(new Map()); // Returns: true\n */\nexport default function isEmpty(param, allowEmptyString) {\n    return (param == null) ||\n        (!allowEmptyString ? param === '' : false) ||\n        (isArray(param) && param.length === 0) ||\n        ((isMap(param) || isSet(param)) && param.size === 0);\n}\n"]}
{"version":3,"sources":["../src/objectClean.js"],"names":[],"mappings":";;;;;kBAcwB,WAAW;;;;;;;;;;;;;;;;;;;;AAApB,SAAS,WAAW,CAAC,MAAM,EAAuB;QAArB,SAAS;;AACjD,WAAO,MAAM,CACR,IAAI,CAAC,MAAM,CAAC,CACZ,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG,EAAK;AAClB,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;AACzB,eAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;SAC1B;AACL,eAAO,GAAG,CAAC;KACd,EAAE,EAAE,CAAC,CAAC;CACV","file":"objectClean.js","sourcesContent":["import isEmpty from './isEmpty';\n\n/**\n * Applies properties from \"config\" if they are undefined in \"object.\n *\n * @param {Object} object The object to be cleaned\n * @param {Function} isEmptyFn Optional isEmpty function\n * @returns {Object} A new cleaned object\n *\n * @example\n * let object = {id: 1, name: undefined}\n * objectClean(object); // returns: {id: 1}\n */\n\nexport default function cleanObject(object, isEmptyFn = isEmpty) {\n    return Object\n        .keys(object)\n        .reduce((acc, key) => {\n            if (!isEmptyFn(object[key]))Â {\n                acc[key] = object[key];\n            }\n        return acc;\n    }, {});\n}"]}
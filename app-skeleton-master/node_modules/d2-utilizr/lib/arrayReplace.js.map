{"version":3,"sources":["../src/arrayReplace.js"],"names":[],"mappings":";;;;;kBAawB,YAAY;;;;;;;;;;;;;;AAArB,SAAS,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE;AACpE,QAAI,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;AACzB,YAAI,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE;AACtB,iBAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;SAClE,MAAM;AACH,iBAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SACnC;KACJ,MAAM;AACH,aAAK,CAAC,MAAM,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;KACpC;AACD,WAAO,KAAK,CAAC;CAChB","file":"arrayReplace.js","sourcesContent":["/**\n * Replace values in an array with given values or remove values from an array.\n *\n * @param {Array} array The array where the values should be replaced\n * @param {number} index The index in the array where to start the replacement\n * @param {number} removeCount The number of items to remove\n * @param {*} insert The item(s) to be inserted\n * @returns {Array} The array with the replaced values\n *\n * @example\n * const sourceArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n * arrayReplace(sourceArray, 0, 5, ['a', 'b', 'c', 'd']); // Returns: ['a', 'b', 'c', 'd', 6, 7, 8, 9, 10]\n */\nexport default function arrayReplace(array, index, removeCount, insert) {\n    if (insert && insert.length) {\n        if (index < array.length) {\n            array.splice.apply(array, [index, removeCount].concat(insert));\n        } else {\n            array.push.apply(array, insert);\n        }\n    } else {\n        array.splice(index, removeCount);\n    }\n    return array;\n}\n"]}
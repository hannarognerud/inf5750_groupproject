{"version":3,"sources":["../src/objectApplyIf.js"],"names":[],"mappings":";;;;;kBAYwB,aAAa;;;;;;;;;;;;;AAAtB,SAAS,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE;AAClD,QAAI,QAAQ,CAAC;;AAEb,QAAI,MAAM,EAAE;AACR,aAAK,QAAQ,IAAI,MAAM,EAAE;AACrB,gBAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAE;AAChC,sBAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;aACvC;SACJ;KACJ;;AAED,WAAO,MAAM,CAAC;CACjB","file":"objectApplyIf.js","sourcesContent":["/**\n * Applies properties from \"config\" if they are undefined in \"object.\n *\n * @param {Object} object The object to receive properties\n * @param {Object} config The object to pass properties\n * @returns {Object} The object that may have received properties\n *\n * @example\n * let object = {id: 1}\n * const config = {id: 2, name: 'Name'}\n * objectApplyIf(object, config); // returns: {id: 1, name: 'Name'}\n */\nexport default function objectApplyIf(object, config) {\n    var property;\n\n    if (object) {\n        for (property in config) {\n            if (object[property] === undefined) {\n                object[property] = config[property];\n            }\n        }\n    }\n\n    return object;\n}\n"]}
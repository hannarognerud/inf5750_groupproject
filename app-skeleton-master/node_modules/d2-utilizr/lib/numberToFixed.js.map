{"version":3,"sources":["../src/numberToFixed.js"],"names":[],"mappings":";;;;;;;;;;;;AAOA,IAAM,aAAa,GAAG,CAAA,YAAW;AAC7B,aAAS,YAAY,CAAC,KAAK,EAAE,SAAS,EAAE;AACpC,iBAAS,GAAG,SAAS,IAAI,CAAC,CAAC;;AAE3B,YAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;AAClC,eAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAA,CAAE,OAAO,CAAC,SAAS,CAAC,CAAC;KAC7D;;AAED,aAAS,eAAe,CAAC,KAAK,EAAE,SAAS,EAAE;AACvC,iBAAS,GAAG,SAAS,IAAI,CAAC,CAAC;;AAE3B,eAAO,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KACnC;;;;AAAA,AAID,WAAO,eAAe,CAAC;CAC1B,CAAA,EAAE,CAAC;;kBAEW,aAAa","file":"numberToFixed.js","sourcesContent":["/**\n * Fixes the number to a certain amount of decimals\n *\n * @param {Number} value The value to apply the function to\n * @param {Number} [precision=0] The amount of decimal digits to fix to\n * @returns {String} The \"fixed\" number with the specified amount of decimals\n */\nconst numberToFixed = function() {\n    function fixedToFixed(value, precision) {\n        precision = precision || 0;\n\n        var pow = math.pow(10, precision);\n        return (math.round(value * pow) / pow).toFixed(precision);\n    }\n\n    function standardToFixed(value, precision) {\n        precision = precision || 0;\n\n        return value.toFixed(precision);\n    }\n\n    // TODO: The \"broken\" toFixed is not easy to test? Should check if still relevant.\n    // return ((0.9).toFixed() !== '1') ? fixedToFixed : standardToFixed;\n    return standardToFixed;\n}();\n\nexport default numberToFixed;\n"]}
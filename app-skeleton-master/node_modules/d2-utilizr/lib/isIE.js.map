{"version":3,"sources":["../src/isIE.js"],"names":[],"mappings":";;;;;kBAewB,IAAI;;;;;;;;;;;;;;;;AAAb,SAAS,IAAI,GAAkC;QAAjC,EAAE,yDAAG,MAAM,CAAC,SAAS,CAAC,SAAS;;;;;;;AAMxD,QAAI,IAAI,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/B,QAAI,IAAI,GAAG,CAAC,EAAE;;AAEV,eAAO,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;KACtE;;AAED,QAAI,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AACrC,QAAI,OAAO,GAAG,CAAC,EAAE;;AAEb,YAAI,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC3B,eAAO,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;KAClE;;AAED,QAAI,IAAI,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/B,QAAI,IAAI,GAAG,CAAC,EAAE;;AAEV,eAAO,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;KACtE;;;AAAA,AAGD,WAAO,KAAK,CAAC;CAChB","file":"isIE.js","sourcesContent":["/**\n * Check if the users browser is a version of Internet Explorer\n *\n * @param [ua] The users user-agent string.\n * @returns {boolean|number} Returns the version number (10, 11, 12) when the browser is IE, otherwise `false`\n *\n * @example\n * // When using IE10\n * isIE(); // Returns: 10\n *\n * // When using FireFox\n * isIE(); // Returns: false\n *\n * TODO: It is not very good practice to return two different types of values from a function. Perhaps we can return `true` on IE and have a secondary function to get the version?\n */\nexport default function isIE(ua = window.navigator.userAgent) {\n    // test values\n    // IE 10: ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\n    // IE 11: ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\n    // IE 12 / Spartan: ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // IE 12 => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n"]}
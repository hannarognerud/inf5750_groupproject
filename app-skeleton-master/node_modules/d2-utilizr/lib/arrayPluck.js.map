{"version":3,"sources":["../src/arrayPluck.js"],"names":[],"mappings":";;;;;kBAoBwB,UAAU;;;;;;;;;;;;;;;;;;;;;AAAnB,SAAS,UAAU,CAAC,KAAK,EAAE,YAAY,EAAE;AACpD,QAAI,QAAQ,GAAG,EAAE,CAAC;AAClB,QAAI,CAAC,CAAC;AACN,QAAI,GAAG,CAAC;AACR,QAAI,IAAI,CAAC;;AAET,SAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAC1C,YAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;AAEhB,gBAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;KACrC;;AAED,WAAO,QAAQ,CAAC;CACnB","file":"arrayPluck.js","sourcesContent":["/**\n *\n * @param {Array} array\n * @param {string|number} propertyName The property of the\n * @returns {Array}\n *\n * @throws {TypeError} When the `propertyName` can not be found on an item in the `array`. This generally happens when a value in the array is `null` or `undefined`\n *\n * @example\n * const values = [{name: 'John'}, {name: 'James'}];\n * arrayPluck(values, 'name') // returns: ['John', 'James']\n *\n * @example\n * const values = [{name: 'John'}, {}, {name: 'James'}];\n * arrayPluck(values, 'name') // returns: ['John', undefined, 'James']\n *\n * @example\n * const values = [undefined, {name: 'James'}];\n * arrayPluck(values, 'name') // throws: Cannot read property 'name' of undefined\n */\nexport default function arrayPluck(array, propertyName) {\n    var newArray = [];\n    var i;\n    var len;\n    var item;\n\n    for (i = 0, len = array.length; i < len; i++) {\n        item = array[i];\n\n        newArray.push(item[propertyName]);\n    }\n\n    return newArray;\n}\n"]}